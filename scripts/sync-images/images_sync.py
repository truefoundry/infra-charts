import sys
import yaml
import shlex
import argparse
import subprocess
import logging


logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(message)s",
    datefmt="%Y-%m-%d %H:%M:%S",
)

def run(cmd):
    logging.info(f"Running: {cmd}")
    proc = subprocess.run(cmd, shell=True)
    if proc.returncode != 0:
        logging.error(f"Command failed with return code {proc.returncode}: {cmd}")
        raise SystemExit(proc.returncode)

def main():
    p = argparse.ArgumentParser()
    p.add_argument("--file", default="images.yaml")
    args = p.parse_args()

    with open(args.file, "r") as f:
        data = yaml.safe_load(f) or {}

    images = data.get("images", [])
    if not images:
        logging.warning(f"No images found in ${args.file}.")
        return 0

    for item in images:
        src = item["from"].strip()
        dst = item["to"].strip()

        run(f"skopeo copy --all \
            --src-username 42fe21d6ff0a2b9e64847c31036906b3620c7768/60b1f55ee2e4647e \
            --src-password eyJhbGciOiJSUzI1NiJ9.eyJhdWQiOiJodHRwczovL2lzc3Vlci5lbmZvcmNlLmRldiIsImV4cCI6MTc5MDQxMDU1NiwiaWF0IjoxNzU4ODc0NTU2LCJpc3MiOiJodHRwczovL3B1bGx0b2tlbi5pc3N1ZXIuY2hhaW5ndWFyZC5kZXYiLCJzdWIiOiJwdWxsLXRva2VuLWMxYzRiNjFlMzUzNjMyZDhjYzU2ZTQxZjA1ODcwOWUwNWM3NGU1ZDkifQ.kqS5I9x1KbqOpqbG8I_QF5N-7f9D_3iCQ5qGxz3LrIxpV4QDKvmPzctEv53FJOc85qM01zw2R6ZpOcyTSZI8ztL-UKhcAa_qz3Q9VaLkhYwduG1jKzovKUGru6yn30publ3tFhkOvu7O-8IqSkIem8uhv0BW4BxTh5q-5mldvuRv3sW_StUssruD2jn7H-YVJYEXa-UWeIXq-dwg6v-0nOoNye38MgdTz-PkExeSwdOlVgmOaAoSwpFz-gAuFEvActTlXEQLcV1LaS8utQ2eLwSwB2OMX1BvsM8py8D3Yt-a6LvmrijaxtmtwYVqkxaWgm1iCAvPD2uDQ07ojUr4F7nQ-MoMCcACT0oQSCmam5UBFI6dPC5T69p4bC7lGm3KTASJseMe4hbOTv_wavcLwoomh7_iHPnZS3J7DKBx5NlPazVpgipey8k0tBxh3zRpszZYDlRPWL5_-1NBiyPscZzXYnJTRK6XXtYrtbt0zJdos9ZfL3BpjMah5DlTooZ_p7QL1hoVau0fxJEj6W-O60jMDaP3LDtoHc8LNSHimj1KzgObJfa5BpfZ7WTQbH2Z1PT6uKQlQwozvoG2aCxEo7SLJuOPE2XM8DY97hgcT_fpTxBwNsAcGJG5yfhzOkgaqmWQwT9poWwYuMkvjtkVzW0gNe3Jd0y-dIpmWjLZwjg \
            --dest-username AWS \
            --dest-password eyJwYXlsb2FkIjoiQ0M1WjBtU2F5NFU1aXEvS2ZWdiszV1VpK0NEU0VPN215Ym5uQXJQcS9yMVNiZDROdWxjZjFqZ1Qrdld1cElJaFZSRkJGNW84UGNwYzZXQmdPM0U3Y09DbE8xZXNnWVRVOE54eDczTlVLcWIrSThoMERlRE0wRXZRSkpqcW40ZjhFaFNXRkI3clF2Z2xjRWJDWU8xQXhtOG93bUNMK1hFMVowVXFxVEhBYTZVcjQvQ2MrdUdSMk5vUHVKUnAxaWNLbm0zV2V4VjhiZVJDTGRqVFJvTGI3OHVHV2ZwOGt5NmFtMklqRUg4K0JSWWhBRUF0VjBUT0NvcVBXRFRtRzl4cVNHWFF1U01uTWZoV255d3MzZ0t5dWU0Z3UyNUNsWGlzZVpzWG52dmlsMUN4a0k4KzEyT2lVajBFMWhJa1M4amYwUFdmdnlHR296d25oK2hHZ0RpQk1lZDdZRTRjeXV5SUJpR0hwWERxVm96NFBwcmgvakdCUHVrZ1BuN1o2cnREalZMSlJjUmNBMjg3WjZ4YVNxKy9FR2hzNEJVelBBc3cyeVpwVVQ3d2h1YzBkM0ZOU3VINXJkeGE2d0Vwa0gyOG12ZzJXOUR0V0kxZ0dsOTlWQW1iek1zRTlJaTRLM3M5R0ZGOHJXZ0dpNWM4RVppY2xnWWNTODFUSmR6MGtxcUNCd0dpbG1EdzIvSW1oT010aHQ4NmlvQnVSekI1K1M5ak1LOURmU0dnKy9IczVrdDBLM3ZHakIwTnVRQjNCSk4rWmxjMG5Rck05cnE1OG9Sd0tUbGNMTXNyM2JyK0NuTjB3MUZIQm5UMFFQczYvUk5nSTFqOVVzNzZrTEt3YWVuYnhUZXpra0Z5RGF4TW1UdDdqRWd5Q2FleXBwUWNwc2VhY1BEdkI3WDlNN1lxMUFpa1U2RVo3Zkl6QnZyN3lJRVEybzI2bEFiZ2hNZWRac2ZqZGVFMUMxeXhGQWJvZ2VNTm04ZGFYY09aZnNKOXU1aEp3UE92RlkvM2Qwd3ZjR1QzYWR6dU1nQlh1TnB6MnFQMTR4TUljQ3ZhVDdzU3lUd0pwM2FFQWdVK1VYZFNTOFVPWUVNMGduTVFxQWpLZEtSL3NmMDcwQVc3VzBoUGFsNmVuSm5ROE1FOEdQTlRVTlczUmVGZHc1Nm0zcXIwN2RKa29xeVd0UlYvTHl2N1cybllZTldud1hPWENvTWtTZWZpWWdMVVp5UTExWDdUR1g1b2xsNU1DZjFFK0p4ZFFDUDBwcHNuMzVMdGFOVTZCdnc4VzUxeVFZVnU2NzZJRkY1VEFZb3RYd09OY0RIRmVHSThmVm9vM2p1dU80WDBGVHRrL0FXYlhyWllKMmtmK3dXemU3RlhURUx4ZUtWcUlRZXRGSWRHZ3VPbm1majB1UVBTUlJUYnRQaDBiN3ZrN3ZZdWRicmw3dUZ5YWxIYUVCcE9zcHdpcmJuVmlSVjhKRUJxU0NxMjl6bFM5M0lRTUVhVjZ5VzRDOXltNlVpOEtSeGt4UExPSWNyQTM5OHBJNWZ6YS9zN3pTSVdxOVozeWo4UWVpYTRTNWpVUklGczZrUkE1RGJweDFCRGdjU0ZKUnNDZ3hsUDcrR2JqeFVFZzNoNmc0Y0ZCNFFJRVU5VTFzTjdKeTV5cHJ1SGpYK1FNRDhkWU9KRUZjMmM2SHdBV0dlemdkM0FZc1doUk42dUxGV3FTYzkvTFZKQ1lpZXRRb0k0NllwTTFtYjMyUk9sa2YzeERzRzBxWkhRMW9zc3N5cFRIVGZ2cE1wWURSNjBTNDJBbG80ZVpJNy9qK0pwT2VyVFJKWVRZRjd1Q1hKZTBVZFY0N2FDVy82RUt0bkN5bVU3cWdvaEJwSVhtbEFJdHFUaG1KZDdXTmZOcHZnMSIsImRhdGFrZXkiOiJleUpRUkZnaU9pSklSbkZ4Y1doWVYyczJTRXBUVjFORGFsVnNkRTVIU25ST1VFWXZaSGcxWWxSaUt6QndRVmxIUVdJcmRqbEhhR2N2T0U4NVNGa3JSbVpoVG5rNE1rSlViWGxNYUc5M1dsbHpNR3hPZFZoU2RGVkRXSGhJVUVkWFFuSldTazFhTkhocGVtZHdjbWNyU21OWGEyeGlNRWxVT1ZZNVl6UkhUQzgzYmxwVU4weDJPVkpwYWtGS1JtSkVaRFI1TWpreGNVaEpVa2RoZEU4MlpFZHhWa2QyUmxwd01FY3lWMlowVUVwVmFUZDZRVmN5VGtKdlYxZ3pNVFl3UVhaNFptTllhbUpDYmtRd1JHMVJORXh2Um1SbFNVaDJSaTlsZVdwaVdWUkVObkp6YzI5blFURnhTVWN4VkVkUlJqRnFjWEpSYWpBclQyUkVlREJXUVVWMUswbERVMWd4Wnl0d1ZuUlVNek16VTJweFIwTnFSR0pKYUdWMU5XUjVlbEJoTVVoSlpIRnVlVXB5ZWxOV1lWVXlVV0Z0VEd0T05XOXBTMjFsY2paMlFYaHdhR3hhTDNSSlNGTmhLMWsyU0dSTVkyVTRXRUphZWpWbE5HYzlQU0lzSWtsQlJDSTZJbEYyZDB0dGVXTjFaVVpqTm5CM1JHSmpiVFJEU1UwNFFrVk1Nbk5KWTJadVJpOTVaVFJHZGpjelNIcEdaVzFPTVZwdlVqQlRZaTloTjBZdk9EbG1jMWxSVkVaUmEwVldVblpwZGpKT2RuVkNSVEpxV0hsaFdFdENURmxPZVhOb1IzaGlTbmt4U25GUWFXVmxSR1p2V21GUWMwRjJSa0Z6TUZCTU1rTmxVRUZIUzFGV1ZuWXhjVUl3YkRoUlFrNTZSMjk1YlVSVE5TdEVLMGRMTkM5aE0zUm1OblZJWmtzMlltdDFjeTlCUzB0TWRXSkxTa2g1VEdSeFFuZG1iME5xTWxaVFltNHZVaXRwT0RSNGVXdzRVVGQ0T0ZaNWVtZEROblZLU21sT1EzRlNTbEo2TWtOU1NUZ3pkelZMY3pZMmEzQnhiV292TkU1aWVDdE5ZaTlyZG5aRFlVVnRZM2RLTmsxMmFuUmllamRZUkhSNVpXeGxRbE5pUW5WMmNVZGhRMUJVYlVNeGQyZ3dLMGRGVlZCMU1rRlBiekZETVdwV1kyTjVPRzVHTlZwTWF6WnNkWE5ZV0hwS2JHZDBVMjVQVGxWSk9UVjBkejA5SW4wPSIsInZlcnNpb24iOiIzIiwidHlwZSI6IkRBVEFfS0VZIiwiZXhwaXJhdGlvbiI6MTc2MDc2MzkxMX0= \
            docker://{shlex.quote(src)} docker://{shlex.quote(dst)}")
    logging.info("Done.")
    return 0

if __name__ == "__main__":
    sys.exit(main())