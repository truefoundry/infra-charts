## @section Configuration values for tfy-otel-collector

## Global Config
global:
  ## @param global.resourceTier [string] Resource deployment type
  resourceTier: "medium"
  ## @param global.affinity [object] Affinity rules for pod scheduling on a node
  affinity: {}
  ## @param global.tolerations [array] Tolerations for pod scheduling on a node
  tolerations: []
  ## @param global.nodeSelector [object] Node selector
  nodeSelector: {}

## @param env [object] Environment variables for the tfyOtelCollector
env:
  CLICKHOUSE_USER: user
  CLICKHOUSE_PASSWORD: ${k8s-secret/truefoundry-clickhouse-secret/CLICKHOUSE_PASSWORD}
  AUTH_BASE_URL: http://{{ .Release.Name }}-servicefoundry-server.{{ .Release.Namespace }}.svc.cluster.local:3000
  CLICKHOUSE_TCP_HOST: tcp://clickhouse-{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:9000
  PROJECT_BASE_URL: http://{{ .Release.Name }}-mlfoundry-server.{{ .Release.Namespace }}.svc.cluster.local:5000
  NATS_BASE_URL: http://{{ .Release.Name }}-tfy-nats.{{ .Release.Namespace }}.svc.cluster.local:4222
  SFY_SERVER_URL: http://{{ .Release.Name }}-servicefoundry-server.{{ .Release.Namespace }}.svc.cluster.local:3000/v1/x/tfy-otel-collector/nats-creds
  TFY_API_KEY: ${k8s-secret/truefoundry-creds/TFY_API_KEY}

## Image configuration for llm-gateway
image:
  ## @param image.repository Image repository for tfyOTELCollector
  repository: tfy.jfrog.io/tfy-private-images/tfy-otel-collector
  ## @param image.tag Image tag for the tfyOTELCollector
  tag: 3acf8d69bb2dfb18dd7b13852e88f33166ab66b4

## @param imagePullSecrets [array] List of secrets to pull images
imagePullSecrets: []

## @param fullnameOverride Full name override for the tfy-otel-collector
fullnameOverride: ""

## @skip replicaCount Number of replicas
# replicaCount: 2

## @param environmentName The environment name
environmentName: default
## @param envSecretName The environment secret name
envSecretName: ""
## @param imagePullPolicy Image pull policy
imagePullPolicy: IfNotPresent
## @param nameOverride Name override
nameOverride: ''
## @param podAnnotations Pod annotations
podAnnotations: {}
## @param commonAnnotations Common annotations
commonAnnotations: {}
## @param podSecurityContext Pod security context
podSecurityContext: {}
## @param commonLabels Common labels
commonLabels: {}
## @param securityContext Security context configuration
securityContext: {}
## Healthcheck configuration
healthcheck:
  ## @param healthcheck.enabled Enable healthcheck
  enabled: true
  ## healthcheck.readiness Readiness probe configuration
  readiness:
    ## @param healthcheck.readiness.port Port to probe
    port: 3000
    ## @param healthcheck.readiness.path Path to probe
    path: /health/status
    ## @param healthcheck.readiness.initialDelaySeconds Initial delay in seconds
    initialDelaySeconds: 30
    ## @param healthcheck.readiness.periodSeconds Period in seconds
    periodSeconds: 10
    ## @param healthcheck.readiness.timeoutSeconds Timeout in seconds
    timeoutSeconds: 1
    ## @param healthcheck.readiness.successThreshold Success threshold
    successThreshold: 1
    ## @param healthcheck.readiness.failureThreshold Failure threshold
    failureThreshold: 3
  ## healthcheck.liveness Liveness probe configuration
  liveness:
    ## @param healthcheck.liveness.port Port to probe
    port: 3000
    ## @param healthcheck.liveness.path Path to probe
    path: /health/status
    ## @param healthcheck.liveness.initialDelaySeconds Initial delay in seconds
    initialDelaySeconds: 600
    ## @param healthcheck.liveness.periodSeconds Period in seconds
    periodSeconds: 10
    ## @param healthcheck.liveness.timeoutSeconds Timeout in seconds
    timeoutSeconds: 1
    ## @param healthcheck.liveness.successThreshold Success threshold
    successThreshold: 1
    ## @param healthcheck.liveness.failureThreshold Failure threshold
    failureThreshold: 3
## @skip resources [object] Resource configuration
#resources:
#  limits:
#      cpu: 200m
#      ephemeral-storage: 512Mi
#      memory: 512Mi
#  requests:
#      cpu: 100m
#      ephemeral-storage: 256Mi
#      memory: 256Mi
## @param nodeSelector Node selector
nodeSelector: {}
## @param tolerations Tolerations
tolerations: {}
## @param affinity Affinity
affinity: {}
## @param topologySpreadConstraints Topology spread constraints
topologySpreadConstraints: {}
## @param terminationGracePeriodSeconds Termination grace period in seconds
terminationGracePeriodSeconds: 120
## Service configuration
service:
  ## @param service.type Service type
  type: ClusterIP
  ## @param service.port Service port
  port: 4318
  ## @param service.annotations Service annotations
  annotations: {}
## Service account configuration
serviceAccount:
  ## @param serviceAccount.create Create service account
  create: true
  ## @param serviceAccount.annotations Service account annotations
  annotations: {}
  ## @param serviceAccount.name Service account name
  name: ""
## @param extraVolumes [array] Extra volumes
extraVolumes: []
## @param extraVolumeMounts [array] Extra volume mounts
extraVolumeMounts: []

## Rollout configuration
rollout:
  ## @param rollout.enabled Enable rollout (rolling update)
  enabled: true
  ## @param rollout.maxUnavailable Maximum number of unavailable replicas during rolling update
  maxUnavailable: 1
  ## @param rollout.maxSurge Maximum number of surge replicas during rolling update
  maxSurge: 50%

## serviceMonitor [object] Service monitor configuration
serviceMonitor:
  ## @param serviceMonitor.enabled Enable service monitor
  enabled: true
  ## @param serviceMonitor.additionalLabels Additional labels for the service monitor
  additionalLabels: {}
  ## @param serviceMonitor.additionalAnnotations Additional annotations for the service monitor
  additionalAnnotations: {}
