apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "tfy-otel-collector.fullname" . }}-cm
  labels:
      {{- include "tfy-otel-collector.labels" . | nindent 4 }}
  annotations:
      {{- include "tfy-otel-collector.annotations" . | nindent 4 }}
data:
  config.yaml: |-
    extensions:
      tfyauth: # Custom authorisation 
        servicefoundry_base_url: ${env:SFY_SERVER_BASE_URL}
        servicefoundry_request_timeout: ${env:SFY_SERVER_REQUEST_TIMEOUT}
        cache_ttl: 5m
        tfy_api_key: ${env:TFY_API_KEY}
        servicefoundry_request_max_retries: ${env:SFY_SERVER_REQUEST_MAX_RETRIES}
        servicefoundry_request_retry_interval: ${env:SFY_SERVER_REQUEST_RETRY_INTERVAL}
      healthcheckv2:
        use_v2: true
        component_health:
          include_permanent_errors: true
          include_recoverable_errors: true
          recovery_duration: 60s
        http:
          endpoint: "0.0.0.0:3000"
          status:
            enabled: true
            path: "/health/status"
          config:
            enabled: true
            path: "/health/config"

    receivers:
      otlp:
        protocols:
          http:
            endpoint: 0.0.0.0:4318  
            include_metadata: true # Want to maintain the headers. Have to keep include_metada = true
            auth:
              authenticator: tfyauth

    exporters:
      debug:
        verbosity: detailed # For debug output during troubleshooting
      nop:
      datafusion:
        deltafusion_ingestor_base_url: ${env:DELTAFUSION_INGESTOR_BASE_URL}
        deltafusion_ingestor_request_timeout: ${env:DELTAFUSION_INGESTOR_REQUEST_TIMEOUT}
        deltafusion_ingestor_request_max_retries: ${env:DELTAFUSION_INGESTOR_REQUEST_MAX_RETRIES}
        deltafusion_ingestor_request_retry_interval: ${env:DELTAFUSION_INGESTOR_REQUEST_RETRY_INTERVAL}
        servicefoundry_base_url: ${env:SFY_SERVER_BASE_URL}
        servicefoundry_request_timeout: ${env:SFY_SERVER_REQUEST_TIMEOUT}
        servicefoundry_request_max_retries: ${env:SFY_SERVER_REQUEST_MAX_RETRIES}
        servicefoundry_request_retry_interval: ${env:SFY_SERVER_REQUEST_RETRY_INTERVAL}
        tfy_api_key: ${env:TFY_API_KEY}
        cache_ttl: 5m

    processors:
      batch:
        timeout: 5s
        send_batch_size: 5000
      resource: # trace level attributes
        attributes:
          - key: Authorization
            from_context: Authorization
            action: upsert
          - key: tfycreatedbysubject
            from_context: auth.tfysubject
            action: upsert    
          - key: tfytenantname
            from_context: auth.tfytenant
            action: upsert
          - key: tfyproject
            from_context: auth.tfyproject
            action: upsert    
          - key: tfyservicename
            from_context: auth.tfyservicename
            action: upsert
          - key: istfyllmgateway
            from_context: auth.istfyllmgateway
            action: upsert
    service:
      telemetry:
        metrics:
          readers:
            - pull:
                exporter:
                  prometheus:
                    host: '0.0.0.0'
                    port: 8888
      extensions:
        - tfyauth
        - healthcheckv2
      pipelines:
        traces:
          receivers: [otlp]
          processors: [resource, batch]
          exporters: [datafusion]
        metrics:
          receivers: [otlp]
          processors: []
          exporters: [nop]

