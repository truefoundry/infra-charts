{{- if .Values.clickhouse.enabled -}}
apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name: {{ .Release.Name }}
  annotations:
    argocd.argoproj.io/sync-options: Prune=false,Delete=false
spec:
  defaults:
    templates:
      serviceTemplate: svc-template
  configuration:
    clusters:
      - name: {{ .Values.clickhouse.clusterName }}
        layout:
          shardsCount: {{ .Values.clickhouse.shardsCount }}
          replicasCount: {{ .Values.clickhouse.replicasCount }}
        templates:
          podTemplate: clickhouse-stable
          dataVolumeClaimTemplate: clickhouse-data-volume
          serviceTemplate: svc-template
    zookeeper:
      nodes:
        - host: {{ tpl .Values.clickhouse.zookeeperHost . }}
          port: {{ tpl .Values.clickhouse.zookeeperPort . }}
    files:
      config.d/named-collections.xml: |
        <clickhouse>
            <named_collections>
                <nats_config>
                    <nats_url from_env="NATS_URL"/>
                    <nats_subjects from_env="NATS_SUBJECTS"/>
                    <nats_username from_env="NATS_USERNAME"/>
                    <nats_password from_env="NATS_PASSWORD"/>
                    <nats_format from_env="NATS_FORMAT" default="JSONEachRow"/>
                    <date_time_input_format from_env="DATE_TIME_INPUT_FORMAT" default="best_effort"/>
                </nats_config>
            </named_collections>
        </clickhouse>
      config.d/log_rotation.xml: |-
        <clickhouse>
            <logger>
                <level>information</level>
                <log>/var/log/clickhouse-server/clickhouse-server.log</log>
                <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
                <size>100M</size>
                <count>5</count>
                <console>1</console>
            </logger>
        </clickhouse>
      users.xml: |-
        <users>
            <clickhouse_operator>
                <networks>
                    <ip>0.0.0.0/0</ip>
                    <ip>::/0</ip>
                </networks>
            </clickhouse_operator>
            {{- if (tpl .Values.global.auth.clickhouse.user .) }}
            <{{ tpl .Values.global.auth.clickhouse.user . }}>
                <password from_env="CLICKHOUSE_PASSWORD"/>
                <profile>default</profile>
                <quota>default</quota>
                <networks>
                    <ip>0.0.0.0/0</ip>
                    <ip>::/0</ip>
                </networks>
            </{{ tpl .Values.global.auth.clickhouse.user . }}>
            {{- end }}
        </users>
  templates:
    serviceTemplates:
      - name: svc-template
        generateName: clickhouse-{chi}
        spec:
          ports:
            - name: http
              port: 8123
            - name: tcp
              port: 9000
          type: ClusterIP
    podTemplates:
      - name: clickhouse-stable
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: clickhouse.altinity.com/cluster
                          operator: In
                          values:
                            - {{ .Values.clickhouse.clusterName }}
                    topologyKey: "kubernetes.io/hostname"
          containers:
            - name: clickhouse
              image: {{ .Values.clickhouse.image }}
              env:
                - name: NATS_URL
                  value: "{{ .Values.clickhouse.nats.url }}"
                - name: NATS_SUBJECTS
                  value: "{{ .Values.clickhouse.nats.subjects }}"
                - name: NATS_USERNAME
                  value: "{{ .Values.clickhouse.nats.username }}"
                - name: NATS_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.auth.secretName }}
                      key: {{ .Values.global.auth.nats.clickhouseRequestLogsReaderPasswordKey }}
                - name: NATS_FORMAT
                  value: "JSONEachRow"
                - name: DATE_TIME_INPUT_FORMAT
                  value: "best_effort"
                - name: CLICKHOUSE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.auth.secretName }}
                      key: {{ .Values.global.auth.clickhouse.passwordKey }}

              resources:
                requests:
                  memory: {{ .Values.clickhouse.resources.requests.memory }}
                  cpu: {{ .Values.clickhouse.resources.requests.cpu }}
                  ephemeral-storage: {{ .Values.clickhouse.resources.requests.ephemeralStorage }}
                limits:
                  memory: {{ .Values.clickhouse.resources.limits.memory }}
                  cpu: {{ .Values.clickhouse.resources.limits.cpu }}
                  ephemeral-storage: {{ .Values.clickhouse.resources.limits.ephemeralStorage }}
    volumeClaimTemplates:
      - name: clickhouse-data-volume
        spec:
          storageClassName: {{ .Values.clickhouse.storage.storageClassName }}
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ .Values.clickhouse.storage.size }}
{{- end }}