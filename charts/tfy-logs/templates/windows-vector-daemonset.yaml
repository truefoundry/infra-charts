{{- if .Values.windowsVector.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "tfy-logs.fullname" . }}-windows
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tfy-logs.labels" . | nindent 4 }}
    app.kubernetes.io/component: vector-windows
spec:
  selector:
    matchLabels:
      {{- include "tfy-logs.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: vector-windows
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        {{- include "tfy-logs.labels" . | nindent 8 }}
        app.kubernetes.io/component: vector-windows
    spec:
      tolerations:
        - operator: Exists
      nodeSelector:
        {{- toYaml .Values.windowsVector.nodeSelector | nindent 8 }}
      {{- if .Values.podPriorityClassName }}
      priorityClassName: {{ .Values.podPriorityClassName }}
      {{- end }}
      containers:
        - name: vector
          image: {{ .Values.windowsVector.image.registry }}/{{ .Values.windowsVector.image.repository }}:{{ .Values.windowsVector.image.tag }}
          imagePullPolicy: IfNotPresent
          args:
            - "--config"
            - "C:\\Program Files\\Vector\\config\\vector.yaml"
          env:
            - name: VECTOR_SELF_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            requests:
              cpu: 50m
              memory: 80Mi
            limits:
              cpu: 200m
              memory: 200Mi
          volumeMounts:
            - name: vl-config
              mountPath: "C:\\Program Files\\Vector\\config"
            - name: data
              mountPath: C:\vector-data
            - name: var-log
              mountPath: C:\var\log
      volumes:
        - name: config
          configMap:
            name: vl-config
        - name: var-log
          hostPath:
            path: C:\var\log
        - name: data
          emptyDir: {}
{{- end }}