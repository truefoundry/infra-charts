## @section Configuration parameters
## Parameters to configure tfyAgent and tfyAgentProxy
##
config:
  ## @param config.clusterToken Token to connect to the control plane
  ##
  clusterToken: ""

  ## @param config.clusterTokenSecret Secret of token to connect to control plane, secret key must be `CLUSTER_TOKEN`. This overrides config.clusterToken
  ##
  clusterTokenSecret: ""

  ## @param config.controlPlaneURL URL of the control plane to connect agent (format: `https://`)
  ##
  controlPlaneURL: ""

  ## @param config.tenantName Tenant Name
  ##
  tenantName: ""

  ## @param config.controlPlaneNatsClusterIP ClusterIP at which nats should connect 
  ##
  controlPlaneNatsClusterIP: "ws://truefoundry-nats.truefoundry.svc.cluster.local:8080"

  ## @param config.controlPlaneClusterIP ClusterIP of the control plane to connect agent (format: `http://`)
  ##
  controlPlaneClusterIP: "http://truefoundry-truefoundry-frontend-app.truefoundry.svc.cluster.local:5000"
  ## @param config.controlPlaneControllerClusterIP ClusterIP of the control plane controller to connect proxy (format: `http://`)
  ##
  controlPlaneControllerClusterIP: "http://truefoundry-tfy-controller.truefoundry.svc.cluster.local:8123"

  ## Opencost configuration
  ##
  opencost:

    ## @param config.opencost.pollInterval Time in milliseconds for opencost scraping
    ##
    pollInterval: "180000"

    ## @param config.opencost.endpoint Endpoint to connect to opencost
    ##
    endpoint: http://opencost.opencost.svc.cluster.local:9003

  ## Prometheus configuration
  ##
  prometheus:
    ## @param config.prometheus.pollInterval Time in milliseconds for prometheus scraping config
    ##
    pollInterval: "60000"

    ## @param config.prometheus.endpoint Endpoint to connect to prometheus
    ##
    endpoint: http://prometheus-operated.prometheus.svc.cluster.local:9090

  ## @param config.alertURL Truefoundry alert URL
  ##
  alertURL: "https://auth.truefoundry.com"

  ## @param config.nodeEnv
  nodeEnv: production

  ## @param config.nodeOptions Node options for tfyAgent
  nodeOptions: ""

  ## @param config.allowedNamespaces A list of namespaces the control plane will have access to for namespaced resources.
  ## If this list is empty, the control plane can access namespaced resources cluster-wide.
  ## If this list is non-empty, the control plane cannot create namespaces in the cluster.
  ## Please check the `tfyAgentProxy.clusterRole.strictMode` field if you plan to use this.
  allowedNamespaces: []
  # Example:
  # allowedNamespaces:
  #   - default
  #   - namespace-1

  ## @param imagePullSecrets Secrets to pull images
  ##
imagePullSecrets: []

## @param nameOverride String to override partial name passed in helm install command
##
nameOverride: ""

## @param fullnameOverride String to override full name passed in helm install command
##
fullnameOverride: ""

## @section tfyAgent configuration parameters
##
tfyAgent:
  ## @param tfyAgent.enabled Bool value to deploy tfyAgent
  ##
  enabled: true

  ## Number of replicas of tfyAgent
  ## value kept for future use, kept 1
  # replicaCount: 1

  ## @param tfyAgent.annotations Add annotations to tfyAgent pods
  ##
  annotations: {}

  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceAccount:
    ## @param tfyAgent.serviceAccount.create Bool to enable serviceAccount creation 
    ##
    create: true

    ## @param tfyAgent.serviceAccount.annotations Annotations to add to the serviceAccount
    ## 
    annotations: {}

    ## @param tfyAgent.serviceAccount.name Name of the serviceAccount to use. If not set and create is true, a name is generated using the fullname template
    ## 
    name: ""

  ## @param tfyAgent.extraEnvVars Additional envrionment variables for tfyAgent
  ##
  extraEnvVars: []
  ##
  # Example:
  # extraEnvVars:
  #   - name: KEY1
  #     value: VALUE1

  ## Configuration for tfyAgent service
  ##
  service:

    ## @param tfyAgent.service.annotations Annotations to add to the tfyAgent service
    ##   
    annotations: {}
    ## @param tfyAgent.service.labels Labels to add to the tfyAgent service
    ##     
    labels: {}
    ## @param tfyAgent.service.clusterIP Cluster IP for tfyAgent service
    ## 
    clusterIP: ""

    ## @param tfyAgent.service.port Port for tfyAgent service
    ##
    port: 3000

    ## @param tfyAgent.service.nodePort Port to expose on each node. Only used if service.type is 'NodePort'
    ##
    nodePort: ""
    ## List of IP addresses at which the tfyAgent server service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##

    ## If you want to make sure that connections from a particular client are passed to the same Pod each time
    ## Accepts 'ClientIP' or ''
    ##
    ## @param tfyAgent.service.sessionAffinity SessionAffinity for tfyAgent Service
    ##
    sessionAffinity: ""

    ## @param tfyAgent.service.type Type for tfyAgent Service
    ##
    type: ClusterIP

  ## Image of tfyAgent
  ##
  image:
    ## @param tfyAgent.image.repository tfyAgent repository
    ##
    repository: tfy.jfrog.io/tfy-images/tfy-agent
    ## @param tfyAgent.image.pullPolicy Pull policy for tfyAgent
    ##
    pullPolicy: IfNotPresent
    ## @param tfyAgent.image.tag Overrides the image tag whose default is the chart appVersion.
    tag: "08cd97b58b41e479f06913ebdbada5bf803960dd"

  ## Define resources requests and limits for single Pods.
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ##
  ## customized resource limits are very general in nature and must be kept the same
  ## decreasing the resource might make the service UNAVAILABLE

  ## @param tfyAgent.resources.limits.cpu CPU resource limits for tfyAgent container. Advised to only increase the limits and not decrease it
  ## @param tfyAgent.resources.limits.memory Memory Resource limits for tfyAgent container. Advised to only increase the limits and not decrease it
  ## @param tfyAgent.resources.limits.ephemeral-storage Ephemeral storage Resource limits for tfyAgent container. Advised to only increase the limits and not decrease it
  ## @param tfyAgent.resources.requests.cpu CPU resource requests for tfyAgent container. Advised to only increase the requests and not decrease it
  ## @param tfyAgent.resources.requests.memory Memory Resource requests for tfyAgent container. Advised to only increase the requests and not decrease it
  ## @param tfyAgent.resources.requests.ephemeral-storage Ephemeral storage Resource requests for tfyAgent container. Advised to only increase the requests and not decrease it
  ##
  resources:
    limits:
      cpu: 500m
      memory: 1024Mi
      ephemeral-storage: 256Mi
    requests:
      cpu: 300m
      memory: 512Mi
      ephemeral-storage: 128Mi

  ## @param tfyAgent.livenessProbe.failureThreshold Failure threshhold value for liveness probe of tfyAgent container
  ## @param tfyAgent.livenessProbe.httpGet.path Path for http request for liveness probe of tfyAgent container
  ## @param tfyAgent.livenessProbe.httpGet.port Port for http request for liveness probe of tfyAgent container
  ## @param tfyAgent.livenessProbe.httpGet.scheme Scheme for http request for liveness probe of tfyAgent container
  ## @param tfyAgent.livenessProbe.periodSeconds Seconds for liveness probe of tfyAgent container
  ## @param tfyAgent.livenessProbe.successThreshold Success threshold for liveness probe of tfyAgent container
  ## @param tfyAgent.livenessProbe.timeoutSeconds Timeout seconds value for liveness probe of tfyAgent container
  ## @param tfyAgent.livenessProbe.initialDelaySeconds Initial delay seconds value for liveness probe of tfyAgent container
  ##
  livenessProbe:
    failureThreshold: 5
    httpGet:
      path: /
      port: 3000
      scheme: HTTP
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
    initialDelaySeconds: 15

  ## @param tfyAgent.readinessProbe.failureThreshold Failure threshhold value for liveness probe of tfyAgent container
  ## @param tfyAgent.readinessProbe.httpGet.path Path for http request for liveness probe of tfyAgent container
  ## @param tfyAgent.readinessProbe.httpGet.port Port for http request for liveness probe of tfyAgent container
  ## @param tfyAgent.readinessProbe.httpGet.scheme Scheme for http request for liveness probe of tfyAgent container
  ## @param tfyAgent.readinessProbe.periodSeconds Seconds for liveness probe of tfyAgent container
  ## @param tfyAgent.readinessProbe.successThreshold Success threshold for liveness probe of tfyAgent container
  ## @param tfyAgent.readinessProbe.timeoutSeconds Timeout seconds value for liveness probe of tfyAgent container
  ## @param tfyAgent.readinessProbe.initialDelaySeconds Initial delay seconds value for liveness probe of tfyAgent container
  readinessProbe:
    failureThreshold: 5
    httpGet:
      path: /
      port: 3000
      scheme: HTTP
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
    initialDelaySeconds: 15

  ## SecurityContext holds pod-level security attributes and common container settings.
  ## This defaults to non root user with uid 1000 and gid 2000. *v1.PodSecurityContext  false
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

  ## @param tfyAgent.securityContext Security Context for the tfyAgent container
  ##
  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  ## If specified, the pod's tolerations.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  ## @param tfyAgent.tolerations Taints that pod can tolerate
  ##
  tolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"

  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  ## @param tfyAgent.nodeSelector Parameters to select for scheduling of pod on a node
  ##
  nodeSelector: {}

  ## @param tfyAgent.extraVolumes Extra volume for tfyAgent container
  ##
  extraVolumes: []
  ## @param tfyAgent.extraVolumeMounts Extra volume mount for tfyAgent container
  ##
  extraVolumeMounts: []

  ## Assign custom affinity rules to the tfyAgent instance
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  ## @param tfyAgent.affinity Affinity rules for pod scheduling on a node
  ##  
  affinity: {}
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: kubernetes.io/e2e-az-name
  #         operator: In
  #         values:
  #         - e2e-az1
  #         - e2e-az2

  ## @param tfyAgent.priorityClassName PriorityClass name for the pod.
  priorityClassName: system-cluster-critical

  clusterRole:
    ## @param tfyAgent.clusterRole.enable Create cluster role.
    enable: true

## @section tfyAgentProxy configuration parameters
##
tfyAgentProxy:
  ## @param tfyAgentProxy.enabled Bool value to deploy tfyAgentProxy
  ##
  enabled: true

  ## Number of replicas of tfyAgentProxy
  ## value kept for future use, ketp 1
  # replicaCount: 1

  ## @param tfyAgentProxy.annotations Add annotations to tfyAgentProxy pods
  ##
  annotations: {}

  ## Image of tfyAgentProxy
  ##
  image:
    ## @param tfyAgentProxy.image.repository tfyAgentProxy repository
    ##
    repository: tfy.jfrog.io/tfy-images/tfy-agent-proxy
    ## @param tfyAgentProxy.image.pullPolicy Pull policy for tfyAgentProxy
    ##
    pullPolicy: IfNotPresent
    ## @param tfyAgentProxy.image.tag Image tag whose default is the chart appVersion.
    ##
    tag: "fcfb8e398eb01f05fb72cd9115b9ec69a89b9cce"

  ## @param tfyAgentProxy.extraEnvVars Additional envrionment variables for tfyAgentPRoxy
  ##
  extraEnvVars: []
  ##
  # Example:
  # extraEnvVars:
  #   - name: KEY1
  #     value: VALUE1

  ## Define resources requests and limits for single Pods.
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ##
  ## customized resource limits are very general in nature and must be kept the same
  ## decreasing the resource might make the service UNAVAILABLE
  ## @param tfyAgentProxy.resources.limits.cpu CPU resource limits for tfyAgentProxy container. Advised to only increase the limits and not decrease it
  ## @param tfyAgentProxy.resources.limits.memory Memory Resource limits for tfyAgentProxy container. Advised to only increase the limits and not decrease it
  ## @param tfyAgentProxy.resources.limits.ephemeral-storage Ephemeral storage Resource limits for tfyAgentProxy container. Advised to only increase the limits and not decrease it
  ## @param tfyAgentProxy.resources.requests.cpu CPU resource requests for tfyAgentProxy container. Advised to only increase the requests and not decrease it
  ## @param tfyAgentProxy.resources.requests.memory Memory Resource requests for tfyAgentProxy container. Advised to only increase the requests and not decrease it
  ## @param tfyAgentProxy.resources.requests.ephemeral-storage Ephemeral storage Resource requests for tfyAgentProxy container. Advised to only increase the requests and not decrease it
  ##
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
      ephemeral-storage: 500M
    requests:
      cpu: 50m
      memory: 128Mi
      ephemeral-storage: 200M

  ## SecurityContext holds pod-level security attributes and common container settings.
  ## This defaults to non root user with uid 1000 and gid 2000. *v1.PodSecurityContext  false
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ##
  ## @param tfyAgentProxy.securityContext Security Context for the tfyAgentProxy container
  ##
  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  ## If specified, the pod's tolerations.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  ## @param tfyAgentProxy.tolerations Taints that pod can tolerate
  ##
  tolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"

  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  ## @param tfyAgentProxy.nodeSelector Parameters to select for scheduling of pod on a node
  ##
  nodeSelector: {}

  ## Assign custom affinity rules to the tfyAgentProxy instance
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  ## @param tfyAgentProxy.affinity Affinity rules for pod scheduling on a node
  ## 
  affinity: {}
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: kubernetes.io/e2e-az-name
  #         operator: In
  #         values:
  #         - e2e-az1
  #         - e2e-az2

  ## @param tfyAgentProxy.priorityClassName PriorityClass name for the pod.
  priorityClassName: system-cluster-critical

  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceAccount:
    ## @param tfyAgentProxy.serviceAccount.create Bool to enable serviceAccount creation 
    ##
    create: true

    ## @param tfyAgentProxy.serviceAccount.annotations Annotations to add to the serviceAccount
    ## 
    annotations: {}

    ## @param tfyAgentProxy.serviceAccount.name Name of the serviceAccount to use. If not set and create is true, a name is generated using the fullname template
    ## 
    name: ""
  
  ## @param tfyAgentProxy.extraVolumes Extra volume for tfyAgentProxy container
  ##
  extraVolumes: []
  ## @param tfyAgentProxy.extraVolumeMounts Extra volume mount for tfyAgentProxy container
  ##
  extraVolumeMounts: []

  clusterRole:
    ## @param tfyAgentProxy.clusterRole.enable Create cluster role.
    enable: true

    ## @param tfyAgentProxy.clusterRole.strictMode Only add required authz rules.
    ## This field is ignored, if `config.allowedNamespaces` is not empty.
    ## if `config.allowedNamespaces` is not empty, we only add required authz rules.
    ## 
    ## Check templates/tfy-agent-proxy-clusterrolebinding-cs.yaml and
    ## `templates/tfy-agent-proxy-clusterrolebinding-ns.yaml` files for more details.
    strictMode: false

    ## @param tfyAgentProxy.clusterRole.clusterScopedAdditionalClusterRoleRules Additional rules to add to the cluster role for cluster-scoped resources.
    clusterScopedAdditionalClusterRoleRules: []
    # Example:
    # - apiGroups: [""]
    #   resources: ["namespaces"]
    #   verbs: ["create"]

    ## @section resourceQuota Add a ResourceQuota to enable priority class in a namspace.
    ##
resourceQuota:
  ## @param resourceQuota.enabled Create the ResourceQuota.
  enabled: true
  ## @param resourceQuota.priorityClasses PriorityClasses to enable.
  priorityClasses:
    - system-cluster-critical


## Config for SDS service
##
sdsServer:
  ## @param sdsServer.enabled Bool value to deploy sdsServer
  ##
  enabled: true

  ## @param sdsServer.replicas Number of replicas of sdsServer
  ##
  replicas: 2

  ## @param sdsServer.annotations Add annotations to sdsServer pods
  ##
  annotations: {}

  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceAccount:
    ## @param sdsServer.serviceAccount.create Bool to enable serviceAccount creation 
    ##
    create: true

    ## @param sdsServer.serviceAccount.annotations Annotations to add to the serviceAccount
    ## 
    annotations: {}

    ## @param sdsServer.serviceAccount.name Name of the serviceAccount to use. If not set and create is true, a name is generated using the fullname template
    ## 
    name: ""

  ## @param sdsServer.extraEnvVars Additional envrionment variables for sdsServer
  ##
  extraEnvVars: []
  ##
  # Example:
  # extraEnvVars:
  #   - name: KEY1
  #     value: VALUE1

  ## Configuration for sdsServer service
  ##
  service:

    ## @param sdsServer.service.annotations Annotations to add to the sdsServer service
    ##   
    annotations: {}
    ## @param sdsServer.service.labels Labels to add to the sdsServer service
    ##     
    labels: {}
    ## @param sdsServer.service.clusterIP Cluster IP for sdsServer service
    ## 
    clusterIP: ""

    ## @param sdsServer.service.port Port for sdsServer service
    ##
    port: 8000

    ## @param sdsServer.service.nodePort Port to expose on each node. Only used if service.type is 'NodePort'
    ##
    nodePort: ""
    ## List of IP addresses at which the sdsServer server service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##

    ## If you want to make sure that connections from a particular client are passed to the same Pod each time
    ## Accepts 'ClientIP' or ''
    ##
    ## @param sdsServer.service.sessionAffinity SessionAffinity for sdsServer Service
    ##
    sessionAffinity: ""

    ## @param sdsServer.service.type Type for sdsServer Service
    ##
    type: ClusterIP

  ## Image of sdsServer
  ##
  image:
    ## @param sdsServer.image.repository Repository for sdsServer
    ##
    repository: tfy.jfrog.io/tfy-images/sds-server
    ## @param sdsServer.image.pullPolicy Pull policy for sdsServer
    ##
    pullPolicy: IfNotPresent
    ## @param sdsServer.image.tag Tag for sdsServer
    ##
    tag: "2fe5b3d87db2ab5b1d3415815f79257249e6b7e9"

  ## @param sdsServer.affinity [object] Node affinity for sdsServer
  ##
  affinity: {}
  
  ## @param sdsServer.imagePullSecrets [array] Image pull credentials for sdsServer
  ##
  imagePullSecrets: []
  
  ## @param sdsServer.command Command and arguments to start the sdsServer application.
  ##
  command:
    - /app/sds-server
    - "--port"
    - "8000"

  ## @param sdsServer.readinessProbe.tcpSocket.port Port for TCP socket used in readiness probe
  ## @param sdsServer.readinessProbe.initialDelaySeconds Initial delay before performing readiness probe
  ## @param sdsServer.readinessProbe.periodSeconds Frequency of performing readiness probe
  readinessProbe:
    tcpSocket:
      port: 8000
    initialDelaySeconds: 15
    periodSeconds: 10

  ## @param sdsServer.livenessProbe.tcpSocket.port Port for TCP socket used in liveness probe
  ## @param sdsServer.livenessProbe.initialDelaySeconds Initial delay before performing liveness probe
  ## @param sdsServer.livenessProbe.periodSeconds Frequency of performing liveness probe
  livenessProbe:
    tcpSocket:
      port: 8000
    initialDelaySeconds: 15
    periodSeconds: 10
  
  ## Define resources requests and limits for single Pods.
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ##
  ## customized resource limits are very general in nature and must be kept the same
  ## decreasing the resource might make the service UNAVAILABLE
  ## @param sdsServer.resources.limits.cpu The maximum CPU resources allocated.
  ## @param sdsServer.resources.limits.ephemeral-storage The maximum ephemeral storage allocated.
  ## @param sdsServer.resources.limits.memory The maximum memory resources allocated.
  ## @param sdsServer.resources.requests.cpu The minimum CPU resources requested.
  ## @param sdsServer.resources.requests.ephemeral-storage The minimum ephemeral storage requested.
  ## @param sdsServer.resources.requests.memory The minimum memory resources requested.
  resources:
    limits:
      cpu: 0.02
      ephemeral-storage: 20M
      memory: 50M
    requests:
      cpu: 0.01
      ephemeral-storage: 10M
      memory: 30M

  ## @param sdsServer.tolerations [array] Tolerations for the sdsServer application
  ##
  tolerations: []

  ## @param sdsServer.topologySpreadConstraints [array] topology spread constraints on sdsServer application
  topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: sds-server
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
