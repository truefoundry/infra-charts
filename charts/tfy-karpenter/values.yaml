## @section eks-node-monitoring-agent configurations
##
eks-node-monitoring-agent:
  dcgmAgent:
    ## @param eks-node-monitoring-agent.dcgmAgent.resources [object] Resources for eks-node-monitoring-agent
    ##
    resources:
      requests:
        cpu: 10m
        memory: 30Mi
      limits:
        cpu: 250m
        memory: 100Mi
    ## @param eks-node-monitoring-agent.dcgmAgent.tolerations [array] Tolerations for eks-node-monitoring-agent
    ##
    tolerations:
      - effect: NoSchedule
        key: nvidia.com/gpu
        operator: Exists

## @section Upstream karpenter configurations
##
karpenter:
  ## @param karpenter.serviceAccount.annotations.eks.amazonaws.com/role-arn Karpenter role ARN
  ##
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: ""
  settings:
    ## @param karpenter.settings.clusterName Name of the EKS cluster
    ##
    clusterName: ""

    ## @param karpenter.settings.clusterEndpoint Endpoint URL of the EKS cluster
    ##
    clusterEndpoint: ""

    ## @param karpenter.settings.interruptionQueue Name of the interruption queue for spot instances
    ##
    interruptionQueue: ""

    ## @param karpenter.settings.reservedENIs reserved ENIs for the custom networking CNI setup
    ##
    reservedENIs: "0"

    ## @param karpenter.settings.featureGates.nodeRepair Enable node repair feature gate
    ##
    featureGates:
      nodeRepair: true
  ## @param karpenter.controller.resources.requests.cpu CPU requests for karpenter container
  ## @param karpenter.controller.resources.requests.memory Memory requests for karpenter container
  ## @param karpenter.controller.resources.limits.cpu CPU limits for karpenter container
  ## @param karpenter.controller.resources.limits.memory Memory requests for karpenter container
  ##
  controller:
    resources:
      requests:
        cpu: 0.5
        memory: 2000Mi
      limits:
        cpu: 1
        memory: 4000Mi
