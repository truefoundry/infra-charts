## @section Configuration for tfy-workflow-propeller
##
global:
  ## @param global.tenantName to set the tenant name
  tenantName: <to_be_provided>
  ## @param global.controlPlaneUrl to set the control plane url
  controlPlaneUrl: <to_be_provided>

## @section flyte-core configurations
flyte-core:
  common:
    ingress:
      ## @param flyte-core.common.ingress.enabled to enable the ingress
      enabled: false
  secrets:
    adminOauthClientCredentials:
      ## @param flyte-core.secrets.adminOauthClientCredentials.enabled to enable Oauth client credentials
      enabled: true
  storage:
    ## @param flyte-core.storage.type to define the storage type
    type: <to_be_provided>
    limits:
      ## @param flyte-core.storage.limits.maxDownloadMBs to define the max download size
      maxDownloadMBs: 2
    ## @param flyte-core.storage.bucketName to define the storage bucket name
    bucketName: <to_be_provided>
    connection:
      ## @param flyte-core.storage.connection.region to define the storage connection region
      region: <to_be_provided>
      ## @param flyte-core.storage.connection.auth-type to define the storage connection auth type
      auth-type: <to_be_provided>
  webhook:
  ## @param flyte-core.webhook.enabled to enable the webhook
    enabled: false
  configmap:
    k8s:
      plugins:
        k8s:
          default-env-vars:
            ## @param flyte-core.configmap.k8s.plugins.k8s.default-env-vars[0].TFY_INTERNAL_SIGNED_URL_SERVER_HOST to set the signed url server host 
            - TFY_INTERNAL_SIGNED_URL_SERVER_HOST: http://tfy-signed-url-server.tfy-workflow-propeller.svc.cluster.local:3001
    core:
      propeller:
        ## @param flyte-core.configmap.core.propeller.max-ttl-hours to set the max ttl hours
        max-ttl-hours: 1
        ## @param flyte-core.configmap.core.propeller.max-workflow-retries to set the max workflow retries
        max-workflow-retries: 5
        ## @param flyte-core.configmap.core.propeller.metadata-prefix to set the storage uri path to set store the metadata, its values should be bucketName/metadata
        metadata-prefix: <to_be_provided>/workflows/metadata
        ## @param  flyte-core.configmap.core.propeller.rawoutput-prefix to set the storage uri path to set store the raw output, its values should be bucketName/raw_data
        rawoutput-prefix: <to_be_provided>/workflows/raw_data
        ## @param flyte-core.configmap.core.propeller.publish-k8s-events to publish kube events
        publish-k8s-events: true
    admin:
      admin:
        ## @param flyte-core.configmap.admin.admin.Command to set the external command
        Command:
          - echo
          - <to_be_provided>
        ## @param flyte-core.configmap.admin.admin.AuthType to set the auth type
        AuthType: ExternalCommand
        ## @param flyte-core.configmap.admin.admin.endpoint to set the endpoint
        endpoint: <to_be_provided>
        ## @param flyte-core.configmap.admin.admin.insecure to set the insecure flag
        insecure: false
        ## @param flyte-core.configmap.admin.admin.AuthorizationHeader to set the authorization header type
        AuthorizationHeader: authorization
      event:
        ## @param flyte-core.configmap.admin.event.rate to set the rate
        rate: 500
        ## @param flyte-core.configmap.admin.event.type to set the type
        type: admin
        ## @param flyte-core.configmap.admin.event.capacity to set the capacity
        capacity: 100
    task_logs:
      plugins:
        logs:
          ## @param flyte-core.configmap.task_logs.plugins.logs.cloudwatch-enabled to enable cloudwatch
          cloudwatch-enabled: false
          ## @param flyte-core.configmap.task_logs.plugins.logs.kubernetes-enabled to enable kubernetes
          kubernetes-enabled: true
          ## @param flyte-core.configmap.task_logs.plugins.logs.kubernetes-template-uri to set the kubernetes uri to fetch the logs
          kubernetes-template-uri: '{{ "{{" }} .podName {{ "}}" }}'
  flyteadmin:
    ## @param flyte-core.flyteadmin.enabled to enable the flyteadmin
    enabled: false
  datacatalog:
    ## @param flyte-core.datacatalog.enabled to enable the datacatalog
    enabled: false
  flyteconsole:
    ## @param flyte-core.flyteconsole.enabled to enable the flyteconsole
    enabled: false
  flytepropeller:
    ## @param flyte-core.flytepropeller.enabled to enable the flytepropeller
    enabled: true
    resources:
      limits:
        ## @param flyte-core.flytepropeller.resources.limits.cpu to set the cpu limit
        cpu: 1
        ## @param flyte-core.flytepropeller.resources.limits.memory to set the memory limit
        memory: 800Mi
        ## @param flyte-core.flytepropeller.resources.limits.ephemeral-storage to set the ephemeral storage limit
        ephemeral-storage: 2Gi
      requests:
        ## @param flyte-core.flytepropeller.resources.requests.cpu to set the cpu request
        cpu: 0.5
        ## @param flyte-core.flytepropeller.resources.requests.memory to set the memory request
        memory: 500Mi
        ## @param flyte-core.flytepropeller.resources.requests.ephemeral-storage to set the ephemeral storage request
        ephemeral-storage: 1Gi
    serviceAccount:
      ## @param flyte-core.flytepropeller.serviceAccount.create to configure whether to create the service account or not
      create: true
      annotations:
        ## @param flyte-core.flytepropeller.serviceAccount.annotations.eks.amazonaws.com/role-arn to set the role arn to access service account
        eks.amazonaws.com/role-arn: <to_be_provided>
  ## @param flyte-core.workflow_scheduler.enabled to enable workflow scheduler
  workflow_scheduler:
    enabled: false
  ## @param flyte-core.workflow_notifications.enabled to enable the workflow notifications
  workflow_notifications:
    enabled: false
  ## @param flyte-core.cluster_resource_manager.enabled to enable the cluster resource manager
  cluster_resource_manager:
    enabled: false

## @section tfySignedURLServer configurations
tfySignedURLServer:
  ## @param tfySignedURLServer.enabled to enable the tfySignedURLServer
  enabled: true
  ## @param tfySignedURLServer.serviceAccountName to set the service account name
  serviceAccountName: flytepropeller
  ## @param tfySignedURLServer.tolerations to set the tolerations
  tolerations: []
  ## @param tfySignedURLServer.labels to set the labels for signed url server
  labels: {}
  ## @param tfySignedURLServer.annotations to set the annotations for signed url server
  annotations: {}
  ## tfySignedURLServer.image to set the image
  image:
    ## @param tfySignedURLServer.image.repository to set the image repository
    repository: "tfy.jfrog.io/tfy-images/tfy-signed-url-server"
    ## @param tfySignedURLServer.image.tag to set the image tag
    tag: "0.0.1"
  ## @param tfySignedURLServer.replicaCount to set the replica count
  replicaCount: 2
  ## @param tfySignedURLServer.imagePullPolicy to set the image pull policy
  imagePullPolicy: IfNotPresent
  ## @param tfySignedURLServer.nameOverride Override name for the tfySignedURLServer
  nameOverride: ''
  ## @param tfySignedURLServer.fullnameOverride Full name override for the tfySignedURLServer
  fullnameOverride: ''
  ## @param tfySignedURLServer.envSecretName to set the environment secret name
  envSecretName: tfy-signed-url-server-env
  ## @param tfySignedURLServer.podAnnotations to set the pod annotations
  podAnnotations: {}
  ## @param tfySignedURLServer.podSecurityContext to set the pod security context
  podSecurityContext: {}
  ## @param tfySignedURLServer.commonLabels to set the common labels
  commonLabels: {}
  ## @param tfySignedURLServer.securityContext to set the security context
  securityContext: {}
  ## tfySignedURLServer.resources to set the resources
  resources:
    ## tfySignedURLServer.resources.limits to set the resource limits
    limits:
      ## @param tfySignedURLServer.resources.limits.cpu to set the cpu limit
      cpu: 100m
      ## @param tfySignedURLServer.resources.limits.memory to set the memory limit
      memory: 200Mi
      ## @param tfySignedURLServer.resources.limits.ephemeral-storage to set the ephemeral storage limit
      ephemeral-storage: 256Mi
    ## tfySignedURLServer.resources.requests to set the resource requests
    requests:
      ## @param tfySignedURLServer.resources.requests.cpu to set the cpu request
      cpu: 100m
      ## @param tfySignedURLServer.resources.requests.memory to set the memory request
      memory: 100Mi
      ## @param tfySignedURLServer.resources.requests.ephemeral-storage to set the ephemeral storage request
      ephemeral-storage: 128Mi
  ## @param tfySignedURLServer.nodeSelector to set the node selector
  nodeSelector: {}
  ## @param tfySignedURLServer.affinity to set the affinity
  affinity: {}
  ## @param tfySignedURLServer.topologySpreadConstraints to set the topology spread constraints
  topologySpreadConstraints: {}
  ## tfySignedURLServer.service to set the service
  service:
    ## @param tfySignedURLServer.service.type to set the service type
    type: ClusterIP
    ## @param tfySignedURLServer.service.port to set the service port
    port: 3001
    ## @param tfySignedURLServer.service.annotations to set the annotations
    annotations: {}
  ## @param tfySignedURLServer.imagePullSecrets to set the image pull secrets
  imagePullSecrets: []
  ## @param tfySignedURLServer.extraVolumes to set the extra volumes
  extraVolumes: []
  ## @param tfySignedURLServer.extraVolumeMounts to set the extra volume mounts
  extraVolumeMounts: []
  ## @skip tfySignedURLServer.env to set the environment variables
  env:
    TENANT_NAME: "{{ .Values.global.tenantName }}"
    CONTROL_PLANE_URL: "{{ .Values.global.controlPlaneUrl }}"
