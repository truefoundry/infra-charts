apiVersion: policy.jspolicy.com/v1beta1
kind: JsPolicy
metadata:
  name: tfy-replace-image-registry
  namespace: {{ .Release.Namespace }}
spec:
  type: Mutating
  operations: ["CREATE", "UPDATE"]
  resources: ["Pod"]
  scope: Namespaced
  namespaceSelector: 
    matchNames: {{ .Values.replaceImageRegistry.includeNamespaces }}
  javascript: |
    const excludedNamespaces = ["kube-system", "kube-public", "kube-node-lease"]
    excludedNamespaces.push({{ .Values.replaceImageRegistry.excludeNamespaces }})
    if (request.namespace in excludedNamespaces) {
      return
    }
    const newRegistry = "{{ .Values.replaceImageRegistry.newRegistry }}";
    
    function replaceImageRegistry(containers) {
        for (var i = 0; i < containers.length; i++) {
            const element = containers[i];
            console.log(element)
            // const normalizedImageURL = image_normalize(regex_replace_all_literal('@.*$', element.image, ''));
            // element.image = regex_replace_all_literal('^[^/]+', normalizedImageURL, newRegistry);
        }
    }

    replaceImageRegistry(request.object.spec.containers);
    replaceImageRegistry(request.object.spec.initContainers);
    mutate(request.object);