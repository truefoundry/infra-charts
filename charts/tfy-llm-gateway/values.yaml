## @section Configuration for LLM Gateway

global:
  ## @param global.resourceTier Resource deployment type
  resourceTier: "medium"
  ## @param global.controlPlaneURL Control plane URL
  controlPlaneURL: ""
  ## @param global.imagePullSecrets [array] Existing truefoundry image pull secret name
  imagePullSecrets: []
  ## @param global.affinity [object] Affinity rules for pod scheduling on a node
  affinity: {}
  ## @param global.labels [object] Global labels
  labels: {}
  ## @param global.annotations [object] Global annotations
  annotations: {}
  ## @param global.podLabels [object] Global pod labels
  podLabels: {}
  ## @param global.podAnnotations [object] Global pod annotations
  podAnnotations: {}
  ## @param global.deploymentLabels [object] Global deployment labels
  deploymentLabels: {}
  ## @param global.deploymentAnnotations [object] Global deployment annotations
  deploymentAnnotations: {}
  ## @param global.serviceAnnotations [object] Global service annotations
  serviceAnnotations: {}
  ## @param global.serviceLabels [object] Global service labels
  serviceLabels: {}
  ## @param global.tolerations [array] Tolerations for pod scheduling on a node
  tolerations: []
  ## @param global.nodeSelector [object] Node selector
  nodeSelector: {}
  ## global.serviceAccount Service account configuration
  serviceAccount:
    ## @param global.serviceAccount.name Service account name
    name: ""
    ## @param global.serviceAccount.labels Service account labels
    labels: {}
    ## @param global.serviceAccount.annotations Service account annotations
    annotations: {}
  ## @param global.image.registry Global image registry override
  image:
    registry: "tfy.jfrog.io"

## Image configuration for llm-gateway
image:
  ## @param image.registry Image registry for tfyLLMGateway (defaults to global.image.registry if not set)
  registry: ""
  ## @param image.repository Image repository for tfyLLMGateway
  repository: tfy-private-images/tfy-llm-gateway
  ## @param image.tag Image tag for the tfyLLMGateway
  tag: v0.93.1

## @param fullnameOverride Full name override for the tfy-llm-gateway
fullnameOverride: ""

## @skip replicaCount Number of replicas
# replicaCount: 3

## @param environmentName The environment name
environmentName: default
## @param envSecretName The environment secret name
envSecretName: tfy-llm-gateway-env-secret
## @param imagePullPolicy Image pull policy
imagePullPolicy: IfNotPresent
## @param nameOverride Name override
nameOverride: ''
## @param podAnnotations Pod annotations
podAnnotations: {}
## @param commonAnnotations Common annotations
commonAnnotations: {}
## @param podSecurityContext Pod security context
podSecurityContext: {}
## @param commonLabels Common labels
commonLabels: {}
## @param podLabels Pod annotations
podLabels: {}
## @param deploymentLabels Deployment labels
deploymentLabels: {}
## @param deploymentAnnotations Deployment annotations
deploymentAnnotations: {}
## @param securityContext Security context configuration
securityContext: {}
## @param imagePullSecrets [array] Image pull secrets
imagePullSecrets: []
## Healthcheck configuration
healthcheck:
  ## @param healthcheck.enabled Enable healthcheck
  enabled: true
  ## healthcheck.readiness Readiness probe configuration
  readiness:
    ## @param healthcheck.readiness.port Port to probe
    port: 8787
    ## @param healthcheck.readiness.path Path to probe
    path: /
    ## @param healthcheck.readiness.initialDelaySeconds Initial delay in seconds
    initialDelaySeconds: 30
    ## @param healthcheck.readiness.periodSeconds Period in seconds
    periodSeconds: 10
    ## @param healthcheck.readiness.timeoutSeconds Timeout in seconds
    timeoutSeconds: 1
    ## @param healthcheck.readiness.successThreshold Success threshold
    successThreshold: 1
    ## @param healthcheck.readiness.failureThreshold Failure threshold
    failureThreshold: 3
  ## healthcheck.liveness Liveness probe configuration
  liveness:
    ## @param healthcheck.liveness.port Port to probe
    port: 8787
    ## @param healthcheck.liveness.path Path to probe
    path: /
    ## @param healthcheck.liveness.initialDelaySeconds Initial delay in seconds
    initialDelaySeconds: 600
    ## @param healthcheck.liveness.periodSeconds Period in seconds
    periodSeconds: 10
    ## @param healthcheck.liveness.timeoutSeconds Timeout in seconds
    timeoutSeconds: 1
    ## @param healthcheck.liveness.successThreshold Success threshold
    successThreshold: 1
    ## @param healthcheck.liveness.failureThreshold Failure threshold
    failureThreshold: 3
## @skip resources [object] Resource configuration
# resources:
#   limits:
#     cpu: 1000m
#     ephemeral-storage: 256Mi
#     memory: 1024Mi
#   requests:
#     cpu: 500m
#     ephemeral-storage: 128Mi
#     memory: 512Mi
## @param nodeSelector Node selector
nodeSelector: {}
## @param tolerations Tolerations
tolerations: []
## @param affinity Affinity
affinity: {}
## @param topologySpreadConstraints Topology spread constraints
topologySpreadConstraints: {}
## @param terminationGracePeriodSeconds Termination grace period in seconds
terminationGracePeriodSeconds: 300
## podDisruptionBudget configuration
podDisruptionBudget:
  ## @param podDisruptionBudget.enabled Enable PodDisruptionBudget
  enabled: true
  ## @param podDisruptionBudget.annotations PDB annotations
  annotations: {}
  ## @param podDisruptionBudget.labels PDB labels
  labels: {}
  ## @param podDisruptionBudget.maxUnavailable Maximum number of unavailable replicas
  maxUnavailable: 1

## Ingress configuration
ingress:
  ## @param ingress.enabled Enable ingress configuration
  enabled: false
  ## @param ingress.annotations Ingress annotations
  annotations: {}
  ## @param ingress.labels Ingress labels
  labels: {}
  ## @param ingress.ingressClassName Ingress class name
  ingressClassName: istio
  ## @param ingress.tls Ingress TLS configuration
  tls: []
  ## @param ingress.hosts Ingress hosts
  hosts: []
## Istio configuration
istio:
  ## istio.virtualservice Virtual service configuration
  virtualservice:
    ## @param istio.virtualservice.enabled Enable virtual service
    enabled: false
    ## @param istio.virtualservice.annotations Virtual service annotations
    annotations: {}
    ## @param istio.virtualservice.labels Virtual service labels
    labels: {}
    ## @param istio.virtualservice.gateways Virtual service gateways
    gateways: []
    ## @param istio.virtualservice.hosts Virtual service hosts
    hosts: []
## Service configuration
service:
  ## @param service.type Service type
  type: ClusterIP
  ## @param service.port Service port
  port: 8787
  ## @param service.annotations Service annotations
  annotations: {}
  ## @param service.labels Service labels
  labels: {}
## Service account configuration
serviceAccount:
  ## @param serviceAccount.create Create service account
  create: false
  ## @param serviceAccount.annotations Service account annotations
  annotations: {}
  ## @param serviceAccount.labels Service account labels
  labels: {}
  ## @param serviceAccount.name Service account name
  name: ""
  ## @param serviceAccount.automountServiceAccountToken Automount service account token this will only be used if create is true
  automountServiceAccountToken: false
## @param extraVolumes Extra volumes
extraVolumes: []
## @param extraVolumeMounts Extra volume mounts
extraVolumeMounts: []
## rbac configuration
rbac:
  ## @param rbac.enabled Enable rbac
  enabled: true

## Autoscaling configuration
autoscaling:
  ## @param autoscaling.enabled Enable autoscaling
  enabled: true
  ## @param autoscaling.minReplicas Minimum number of replicas
  minReplicas: 3
  ## @param autoscaling.maxReplicas Maximum number of replicas
  maxReplicas: 100
  ## @param autoscaling.targetCPUUtilizationPercentage Target CPU utilization percentage
  targetCPUUtilizationPercentage: 60

## Rollout configuration
rollout:
  ## @param rollout.enabled Enable rollout (rolling update)
  enabled: true
  ## @param rollout.maxUnavailable Maximum number of unavailable replicas during rolling update
  maxUnavailable: 0
  ## @param rollout.maxSurge Maximum number of surge replicas during rolling update
  maxSurge: 100%

## @skip env Environment variables for the llmGateway
env:
  SERVICEFOUNDRY_SERVER_URL: http://{{ .Release.Name }}-servicefoundry-server.{{ .Release.Namespace }}.svc.cluster.local:3000
  TFY_API_KEY: ${k8s-secret/truefoundry-creds/TFY_API_KEY}
  LOG_LEVEL: info
  DEPLOYED_LLM_GATEWAY_URL: "{{ .Values.global.controlPlaneURL }}/api/llm"
  CONTROL_PLANE_NATS_URL: http://{{ .Release.Name }}-tfy-nats.{{ .Release.Namespace }}.svc.cluster.local:4222
  ENABLE_EXTERNAL_OAUTH: "false"
  REQUEST_LOGGING_MODE: HEADER_CONTROLLED
  TENANT_NAME: "{{ .Values.global.tenantName }}"
  TFY_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://{{ .Release.Name }}-tfy-otel-collector.{{ .Release.Namespace }}.svc.cluster.local:4318/v1/traces
  USE_GLOBAL_STATE_V2: "true"
  MULTITENANT: "false"
  TIME_PER_OUTPUT_TOKEN_THRESHOLD_MINIMUM_SAMPLE_SIZE: "3"
  AUTH_SERVER_URL: https://auth.truefoundry.com
  RUN_IN_SINGLE_TENANT_MODE: "false"

## serviceMonitor [object] Service monitor configuration
serviceMonitor:
  ## @param serviceMonitor.enabled Enable service monitor
  enabled: true
  ## @param serviceMonitor.additionalLabels Additional labels for the service monitor
  additionalLabels: {}
  ## @param serviceMonitor.additionalAnnotations Additional annotations for the service monitor
  additionalAnnotations: {}

## OIDC configuration
oidc:
  ## @param oidc.enabled Enable OIDC configuration
  enabled: false
  ## @param oidc.config OIDC configuration
  config: {}
