## @section Configuration for LLM Gateway

global:
  ## @param global.controlPlaneURL Control plane URL
  controlPlaneURL: ""
  ## @param global.truefoundryReleaseName Truefoundry release name
  truefoundryReleaseName: "truefoundry"
  ## @param global.existingTruefoundryImagePullSecretName Existing truefoundry image pull secret name
  existingTruefoundryImagePullSecretName: ""
  llmGatewayInfra:
    ## @param global.llmGatewayInfra.enabled Bool if llm gateway infra is enabled
    enabled: false
    ## @param global.llmGatewayInfra.releaseName Release name for the tfy-llm-gateway-infra
    releaseName: "tfy-llm-gateway-infra"
    ## @param global.llmGatewayInfra.natsAdminPassword NATS admin password  
    natsAdminPassword: ""

## Image configuration for llm-gateway
image:
  ## @param image.repository Image repository for tfyLLMGateway
  repository: tfy.jfrog.io/tfy-private-images/tfy-llm-gateway
  ## @param image.tag Image tag for the tfyLLMGateway
  tag: a71d94cb1ec8e161452a068fcd4c0c243a24472c

## @param fullnameOverride Full name override for the tfy-llm-gateway
fullnameOverride: ""

## @param replicaCount Number of replicas
replicaCount: 3
## @param environmentName The environment name
environmentName: default
## @param envSecretName The environment secret name
envSecretName: tfy-llm-gateway-env-secret
## @param imagePullPolicy Image pull policy
imagePullPolicy: IfNotPresent
## @param nameOverride Name override
nameOverride: ''
## @param podAnnotations Pod annotations
podAnnotations: {}
## @param podSecurityContext Pod security context
podSecurityContext: {}
## @param commonLabels Common labels
commonLabels: {}
## @param securityContext Security context configuration
securityContext: {}
## Healthcheck configuration
healthcheck:
  ## @param healthcheck.enabled Enable healthcheck
  enabled: true
  ## healthcheck.readiness Readiness probe configuration
  readiness:
    ## @param healthcheck.readiness.port Port to probe
    port: 8787
    ## @param healthcheck.readiness.path Path to probe
    path: /
    ## @param healthcheck.readiness.initialDelaySeconds Initial delay in seconds
    initialDelaySeconds: 10
    ## @param healthcheck.readiness.periodSeconds Period in seconds
    periodSeconds: 10
    ## @param healthcheck.readiness.timeoutSeconds Timeout in seconds
    timeoutSeconds: 5
    ## @param healthcheck.readiness.successThreshold Success threshold
    successThreshold: 1
    ## @param healthcheck.readiness.failureThreshold Failure threshold
    failureThreshold: 3
  ## healthcheck.liveness Liveness probe configuration
  liveness:
    ## @param healthcheck.liveness.port Port to probe
    port: 8787
    ## @param healthcheck.liveness.path Path to probe
    path: /
## Resource configuration
resources:
  ## resources.limits Resource limits
  limits:
    ## @param resources.limits.cpu CPU limit
    cpu: 2
    ## @param resources.limits.memory Memory limit
    memory: 1024Mi
    ## @param resources.limits.ephemeral-storage Ephemeral storage limit
    ephemeral-storage: 512Mi
  ## resources.requests Resource requests
  requests:
    ## @param resources.requests.cpu CPU request
    cpu: 1
    ## @param resources.requests.memory Memory request
    memory: 512Mi
    ## @param resources.requests.ephemeral-storage Ephemeral storage request
    ephemeral-storage: 256Mi
## @param nodeSelector Node selector
nodeSelector: {}
## @param tolerations Tolerations
tolerations: {}
## @param affinity Affinity
affinity: {}
## @param topologySpreadConstraints Topology spread constraints
topologySpreadConstraints: {}
## Ingress configuration
ingress:
  ## @param ingress.enabled Enable ingress configuration
  enabled: false
  ## @param ingress.annotations Ingress annotations
  annotations: {}
  ## @param ingress.labels Ingress labels
  labels: {}
  ## @param ingress.ingressClassName Ingress class name
  ingressClassName: istio
  ## @param ingress.tls Ingress TLS configuration
  tls: []
  ## @param ingress.hosts Ingress hosts
  hosts: []
## Istio configuration
istio:
  ## istio.virtualservice Virtual service configuration
  virtualservice:
    ## @param istio.virtualservice.enabled Enable virtual service
    enabled: false
    ## @param istio.virtualservice.annotations Virtual service annotations
    annotations: {}
    ## @param istio.virtualservice.gateways Virtual service gateways
    gateways: []
    ## @param istio.virtualservice.hosts Virtual service hosts
    hosts: []
## Service configuration
service:
  ## @param service.type Service type
  type: ClusterIP
  ## @param service.port Service port
  port: 8787
  ## @param service.annotations Service annotations
  annotations: {}
## Service account configuration
serviceAccount:
  ## @param serviceAccount.create Create service account
  create: true
  ## @param serviceAccount.annotations Service account annotations
  annotations: {}
  ## @param serviceAccount.name Service account name
  name: tfy-llm-gateway
## @param extraVolumes Extra volumes
extraVolumes: []
## @param extraVolumeMounts Extra volume mounts
extraVolumeMounts: []
## rbac configuration
rbac:
  ## @param rbac.enabled Enable rbac
  enabled: true

## Autoscaling configuration
autoscaling:
  ## @param autoscaling.enabled Enable autoscaling  
  enabled: true
  ## @param autoscaling.minReplicas Minimum number of replicas
  minReplicas: 3
  ## @param autoscaling.maxReplicas Maximum number of replicas
  maxReplicas: 100
  ## @param autoscaling.targetCPUUtilizationPercentage Target CPU utilization percentage
  targetCPUUtilizationPercentage: 60

## Rollout configuration
rollout:
  ## @param rollout.enabled Enable rollout (rolling update)
  enabled: true
  ## @param rollout.maxUnavailable Maximum number of unavailable replicas during rolling update
  maxUnavailable: 0
  ## @param rollout.maxSurge Maximum number of surge replicas during rolling update
  maxSurge: 100%

## @skip env Environment variables for the llmGateway
env:
  CONTROL_PLANE_URL: "{{ .Values.global.controlPlaneURL }}"
  TFY_API_KEY: ${k8s-secret/truefoundry-creds/TFY_API_KEY}
  AUTH_SERVER_URL: https://auth.truefoundry.com
  LOG_LEVEL: info
  GATEWAY_NATS_ENABLED: "{{ .Values.global.llmGatewayInfra.enabled }}"
  GATEWAY_NATS_URL: ws://{{ .Values.global.llmGatewayInfra.releaseName }}-nats.{{ .Release.Namespace }}.svc.cluster.local:8080
  GATEWAY_NATS_USERNAME: admin
  GATEWAY_NATS_PASSWORD: "{{ .Values.global.llmGatewayInfra.natsAdminPassword }}"
  DEPLOYED_LLM_GATEWAY_URL: "{{ .Values.global.controlPlaneURL }}/api/llm"
  CONTROL_PLANE_NATS_URL: ws://{{ .Values.global.truefoundryReleaseName }}-nats.{{ .Release.Namespace }}.svc.cluster.local:8080
  ENABLE_EXTERNAL_OAUTH: "false"
