apiVersion: apps/v1
kind: Deployment
metadata:
  {{- with .Values.labels }}
  labels:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  name: notebook-controller-deployment
spec:
  selector:
    matchLabels:
    {{- with .Values.labels }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
  template:
    metadata:
      labels:
        {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - command:
            - /manager
          env:
            - name: CLUSTER_DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: CLUSTER_DOMAIN
                  name: notebook-controller-config-map
            - name: ENABLE_CULLING
              valueFrom:
                configMapKeyRef:
                  key: ENABLE_CULLING
                  name: notebook-controller-config-map
            - name: CULL_IDLE_TIME
              valueFrom:
                configMapKeyRef:
                  key: CULL_IDLE_TIME
                  name: notebook-controller-config-map
            - name: IDLENESS_CHECK_PERIOD
              valueFrom:
                configMapKeyRef:
                  key: IDLENESS_CHECK_PERIOD
                  name: notebook-controller-config-map
            - name: ISTIO_GATEWAY
              valueFrom:
                configMapKeyRef:
                  key: ISTIO_GATEWAY
                  name: notebook-controller-config-map
            - name: NOTEBOOK_BASE_DOMAIN_URL
              valueFrom:
                configMapKeyRef:
                  key: NOTEBOOK_BASE_DOMAIN_URL
                  name: notebook-controller-config-map
            - name: SDS_SERVICE_URL
              value: "sds-service.{{ .Release.Namespace }}.svc.cluster.local:8000"
            - name: IS_OAUTH_ENABLED
              valueFrom:
                configMapKeyRef:
                  key: IS_OAUTH_ENABLED
                  name: notebook-controller-config-map
            - name: OAUTH_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  key: OAUTH_CLIENT_ID
                  name: notebook-controller-config-map
            - name: OAUTH_TOKEN_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: OAUTH_TOKEN_ENDPOINT
                  name: notebook-controller-config-map
            - name: OAUTH_AUTHORIZATION_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: OAUTH_AUTHORIZATION_ENDPOINT
                  name: notebook-controller-config-map
            - name: OAUTH_JWKS_URI
              valueFrom:
                configMapKeyRef:
                  key: OAUTH_JWKS_URI
                  name: notebook-controller-config-map

          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
      serviceAccountName: notebook-controller-service-account
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
        
