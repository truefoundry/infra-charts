## @param clusterToken cluster token for connecting to the platform
##
clusterToken: <to_be_provided>

## @param tenantName tenant name for the platform
##
tenantName: truefoundry

## @param controlPlaneURL control plane URL for the platform
##
controlPlaneURL: <to_be_provided>

## @param createTfyAppsArgoProject create the tfy-apps argo project
##
createTfyAppsArgoProject: True

## @section Cluster parameters
## Parameters to configure cluster inputs
##
cluster:
  ## @param name name of the cluster
  ##
  name: <terragruntOutput.cluster.cluster_name.raw>

  ## @param endpoint endpoint of the cluster
  ##
  endpoint: <terragruntOutput.cluster.cluster_endpoint.raw>

## @section Argocd parameters
## Parameters to configure argocd
##
argocd:
  ## @param enabled enable Argo CD
  ##
  enabled: True
## @section Argo Workflows parameters
## Parameters to configure Argo Workflows
##
argoWorkflows:
  ## @param enabled enable Argo Workflows
  ##
  enabled: True
## @section Argo Rollouts parameters
## Parameters to configure Argo Rollouts
##
argoRollouts:
  ## @param enabled enable Argo Rollouts
  ##
  enabled: True
## @section Notebook Controller parameters
## Parameters to configure Notebook Controller
##
notebookController:
  ## @param enabled enable Notebook Controller
  ##
  enabled: True
## @section Cert Manager parameters
## Parameters to configure Cert Manager
##
certManager:
  ## @param enabled enable Cert Manager
  ##
  enabled: True


## @section AWS parameters
## Parameters to configure AWS
##
aws:
  ## @section AWS Load Balancer Controller parameters
  ## Parameters to configure AWS Load Balancer Controller
  ##
  awsLoadBalancerController:
    ## @param enabled enable AWS Load Balancer Controller
    ##
    enabled: True

    ## @param roleArn AWS Load Balancer Controller role ARN
    ##
    roleArn: <terragruntOutput.aws-load-balancer-controller.elb_iam_role_arn.raw>

  ## @section Karpenter parameters
  ## Parameters to configure Karpenter
  ##
  karpenter:
    ## @param enabled enable Karpenter
    ##
    enabled: True

    ## @param roleArn Karpenter role ARN
    ##
    roleArn: <terragruntOutput.karpenter.karpenter_role_arn.raw>

    ## @param instanceProfile Karpenter instance profile
    ##
    instanceProfile: <terragruntOutput.karpenter.karpenter_instance_profile_id.raw>

    ## @param defaultZones Karpenter default zones
    ##
    defaultZones: <terragruntOutput.network.availability_zones.json>

    ## @section Karpenter GPU provisioner parameters
    ## Parameters to configure Karpenter GPU provisioner
    ##
    gpuProvisioner:
      ## @param capacityTypes GPU provisioner capacity types
      ##
      capacityTypes: ['spot', 'on-demand']

      ## @param instanceFamilies GPU provisioner instance families
      ##
      instanceFamilies: ['p2', 'p3', 'p4d', 'p4de', 'p5', 'g4dn', 'g5']

      ## @param zones GPU provisioner zones
      ##
      zones: <terragruntOutput.network.availability_zones.json>

    ## @section Karpenter Inferentia provisioner parameters
    ## Parameters to configure Karpenter Inferentia provisioner
    ##
    inferentiaProvisioner:
        ## @param capacityTypes Inferentia provisioner capacity types
        ##
        capacityTypes: ['spot', 'on-demand']

        ## @param instanceFamilies Inferentia provisioner instance families
        ##
        instanceFamilies: ['inf1', 'inf2']

        ## @param zones Inferentia provisioner zones
        ##
        zones: <terragruntOutput.network.availability_zones.json>

    ## @param interruptionQueueName Karpenter interruption queue name
    ##
    interruptionQueueName: <terragruntOutput.karpenter.karpenter_sqs_name.raw>

  ## @section AWS EBS CSI Driver parameters
  ## Parameters to configure AWS EBS CSI Driver
  ##
  awsEbsCsiDriver:
    ## @param enabled enable AWS EBS CSI Driver
    ##
    enabled: True

    ## @param roleArn AWS EBS CSI Driver role ARN
    ##
    roleArn: <terragruntOutput.csi-ebs.iam_role_arn.raw>

  ## @section AWS EFS CSI Driver parameters
  ## Parameters to configure AWS EFS CSI Driver
  ##
  awsEfsCsiDriver:
    ## @param enabled enable AWS EFS CSI Driver
    ##
    enabled: True

    ## @param fileSystemId AWS EFS CSI Driver file system ID
    ##
    fileSystemId: <terragruntOutput.efs.efs_id.raw>

    ## @param region AWS EFS CSI Driver region
    ##
    region: <terragruntOutput.network.region.raw>

    ## @param roleArn AWS EFS CSI Driver role ARN
    ##
    roleArn: <terragruntOutput.efs.efs_role_arn.raw>


## @section TFY GPU Operator parameters
## Parameters to configure TFY GPU Operator
##
tfyGpuOperator:
  ## @param enabled enable TFY GPU Operator
  ##
  enabled: True

  ## @param clusterType TFY GPU Operator cluster type
  ##
  clusterType: awsEks

## @section TrueFoundry parameters
## Parameters to configure TrueFoundry
##
truefoundry:
  ## @param enabled enable TrueFoundry
  ##
  enabled: True

  ## @param controlPlaneURL TrueFoundry control plane URL
  ##
  controlPlaneURL: <to_be_provided>

  ## @param createVs create virtual services
  ##
  createVs: True

  mlfoundry:
    ## @param annotations MLFoundry annotations
    ##
    annotations: {'eks.amazonaws.com/role-arn': '<to_be_provided>'}

    ## @param enabled enable MLFoundry
    ##
    enabled: True

    ## @param envOverwrite MLFoundry environment overwrite
    ##
    envOverwrite: {'S3_BUCKET_NAME': '<to_be_provided>'}

  mlmonitoring:
    ## @param enabled enable ML Monitoring
    ##
    enabled: True

    ## @param envOverwrite ML Monitoring environment overwrite
    ##
    envOverwrite: {}

  servicefoundry:
    ## @param annotations ServiceFoundry annotations
    ##
    annotations: {'eks.amazonaws.com/role-arn': '<to_be_provided>'}

    ## @param enabled enable ServiceFoundry
    ##
    enabled: True

    ## @param envOverwrite ServiceFoundry environment overwrite
    ##
    envOverwrite: {'S3_BUCKET_NAME': '<to_be_provided>'}

  sfyManifestService:
    ## @param enabled enable SFY Manifest Service
    ##
    enabled: True

  tfyBuild:
    ## @param enabled enable TFY Build
    ##
    enabled: True

  nats:
    ## @param enabled enable NATS
    ##
    enabled: True

  local:
    ## @param postgresql enable local PostgreSQL
    ##
    postgresql: {}

  truefoundryFrontendApp:
    ## @param enabled enable TrueFoundry Frontend App
    ##
    enabled: True

    ## @param envOverwrite TrueFoundry Frontend App environment overwrite
    ##
    envOverwrite: {}

## @section Loki parameters
## Parameters to configure Loki
##
loki:
  ## @param enabled enable Loki
  ##
  enabled: True

## @section Istio parameters
## Parameters to configure Istio
##
istio:
  ## @param enabled enable Istio
  ##
  enabled: True

## @section TFY Inferentia Operator parameters
## Parameters to configure TFY Inferentia Operator
##
tfyInferentiaOperator:
  ## @param enabled enable TFY Inferentia Operator
  ##
  enabled: True

## @section KEDA parameters
## Parameters to configure KEDA
##
keda:
  ## @param enabled enable KEDA
  ##
  enabled: True

## @section Kubecost parameters
## Parameters to configure Kubecost
##
kubecost:
  ## @param enabled enable Kubecost
  ##
  enabled: True

## @section Prometheus parameters
## Parameters to configure Prometheus
##
prometheus:
  ## @param enabled enable Prometheus
  ##
  enabled: True

## @section Grafana parameters
## Parameters to configure Grafana
##
grafana:
  ## @param enabled enable Grafana
  ##
  enabled: True

## @section TFY Agent parameters
## Parameters to configure TFY Agent
##
tfyAgent:
  ## @param enabled enable TFY Agent
  ##
  enabled: True

  ## @param annotations TFY Agent annotations
  ##
  annotations: {}