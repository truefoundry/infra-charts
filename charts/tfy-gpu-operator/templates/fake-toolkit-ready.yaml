{{- if or .Values.clusterType.awsEks .Values.clusterType.civoTalos  }}

{{- $fakeToolkitReady := dict }}

{{- if .Values.clusterType.awsEks }}
{{- $fakeToolkitReady = (index .Values "aws-eks-gpu-operator" "fakeToolkitReady") }}
{{- else if .Values.clusterType.civoTalos }}
{{- $fakeToolkitReady = (index .Values "civo-talos-gpu-operator" "fakeToolkitReady") }}
{{- end }}

{{- if $fakeToolkitReady }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-fake-toolkit-ready
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      k8s-app: {{ .Release.Name }}-fake-toolkit-ready
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-fake-toolkit-ready
        k8s-app: {{ .Release.Name }}-fake-toolkit-ready
    spec:
      volumes:
        - name: run-nvidia
          hostPath:
            path: /run/nvidia/validations/
      {{- if $fakeToolkitReady.imagePullSecrets }}
      imagePullSecrets:
        {{- $fakeToolkitReady.imagePullSecrets | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: main
          image: {{ $fakeToolkitReady.image.repository }}:{{ $fakeToolkitReady.image.tag }}
          command:
            - sh
            - '-c'
          args:
            - |-
              set -ex;
              while true; do
                touch /run/nvidia/validations/host-driver-ready;
                touch /run/nvidia/validations/driver-ready;
                touch /run/nvidia/validations/toolkit-ready;
                sleep 5;
              done;
          resources: 
            {{- $fakeToolkitReady.resources | toYaml | nindent 12 }}
          volumeMounts:
            - name: run-nvidia
              mountPath: /run/nvidia/validations/
              mountPropagation: HostToContainer
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      affinity:
        {{- $fakeToolkitReady.affinity | toYaml | nindent 8 }}
      tolerations:
        {{- $fakeToolkitReady.tolerations | toYaml | nindent 8 }}
      priorityClassName: system-node-critical
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  revisionHistoryLimit: 1
{{- end }}
{{- end }}
