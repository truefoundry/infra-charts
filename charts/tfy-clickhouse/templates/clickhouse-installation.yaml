{{- if .Values.clickhouse.enabled -}}
apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name: {{ .Release.Name }}
  annotations:
    {{- if include "clickhouse.annotations" . -}}
    {{- include "clickhouse.annotations" . | nindent 4 -}}
    {{- end }}
  labels:
    {{- include "clickhouse.labels" . | nindent 4 }}
spec:
  defaults:
    templates:
      serviceTemplate: svc-template
  configuration:
    clusters:
      - name: {{ .Values.clickhouse.clusterName }}
        layout:
          shardsCount: {{ .Values.clickhouse.shardsCount }}
          replicasCount: {{ include "clickhouse.replicas" . }}
        templates:
          podTemplate: clickhouse-stable
          dataVolumeClaimTemplate: clickhouse-data-volume
          serviceTemplate: svc-template
    zookeeper:
      nodes:
        - host: {{ tpl .Values.clickhouse.zookeeperHost . }}
          port: {{ tpl .Values.clickhouse.zookeeperPort . }}
    files:
      config.d/log_rotation.xml: |-
        <clickhouse>
            <logger>
                <level>information</level>
                <console>true</console>
                <log remove="remove"/>
                <errorlog remove="remove"/>
            </logger>
        </clickhouse>
      users.d/users.xml: |-
        <clickhouse>
          <users>
              <clickhouse_operator>
                  <networks>
                      <ip>0.0.0.0/0</ip>
                      <ip>::/0</ip>
                  </networks>
              </clickhouse_operator>
              {{- if (tpl .Values.clickhouse.auth.user .) }}
              <{{ tpl .Values.clickhouse.auth.user . }}>
                  <password from_env="CLICKHOUSE_USER_PASSWORD"/>
                  <profile>default</profile>
                  <quota>default</quota>
                  <networks>
                      <ip>0.0.0.0/0</ip>
                      <ip>::/0</ip>
                  </networks>
              </{{ tpl .Values.clickhouse.auth.user . }}>
              {{- end }}
          </users>
        </clickhouse>
  templates:
    serviceTemplates:
      - name: svc-template
        generateName: clickhouse-{chi}
        spec:
          ports:
            - name: http
              port: 8123
            - name: tcp
              port: 9000
          type: ClusterIP
    podTemplates:
      - name: clickhouse-stable
        spec:
          {{- if .Values.clickhouse.serviceAccount.enabled }}
          serviceAccountName: {{ .Values.clickhouse.serviceAccount.name }}
          automountServiceAccountToken: {{ .Values.clickhouse.serviceAccount.automountServiceAccountToken }}
          {{- end }}
          nodeSelector:
            {{- include "clickhouse.nodeSelector" . | nindent 12 }}
          tolerations:
            {{- include "clickhouse.tolerations" . | nindent 12 }}
          {{- with .Values.clickhouse.topologySpreadConstraints }}
          topologySpreadConstraints:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          affinity:
            {{- include "clickhouse.affinity" . | nindent 12 }}
          {{- with .Values.clickhouse.imagePullSecrets }}
          imagePullSecrets:
              {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.clickhouse.podSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          containers:
            - name: clickhouse
              image: "{{ .Values.clickhouse.image.repository }}:{{ .Values.clickhouse.image.tag }}"
              env:
                - name: CLICKHOUSE_USER_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.clickhouse.auth.secretName }}
                      key: {{ .Values.clickhouse.auth.passwordKey }}
              resources:
                {{- include "clickhouse.resources" . | nindent 16 }}
              {{- with .Values.clickhouse.containerSecurityContext }}
              securityContext:
                {{- toYaml . | nindent 16 }}
              {{- end }}
    volumeClaimTemplates:
      - name: clickhouse-data-volume
        spec:
          storageClassName: {{ .Values.clickhouse.storage.storageClassName }}
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ include "clickhouse.storageSize" . }}
{{- end }}