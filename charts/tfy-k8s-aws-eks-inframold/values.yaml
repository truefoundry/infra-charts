## @section Global Parameters
## @param tenantName Parameters for tenantName
## Tenant Name - This is same as the name of the organization used to sign up 
## on Truefoundry
##
tenantName: ""

## @param controlPlaneURL Parameters for controlPlaneURL
## URL of the control plane - This is the URL that can be used by workload to access the truefoundry components
##
controlPlaneURL: ""

## @param clusterName Name of the cluster
## Name of the cluster that you have created on AWS/GCP/Azure
##
clusterName: ""

## @param tolerations [array] Tolerations for the all chart components
##

tolerations: []


## @param affinity [object] Affinity for the all chart components
##

affinity: {}


## @section argocd parameters
## @param argocd.enabled Flag to enable ArgoCD
## ArgoCD is mandatory for Truefoundry to work. You can make it false if ArgoCD is
## already installed in your cluster. Please make sure that the configuration of 
## existing ArgoCD is same as the ArgoCD configuration required by Truefoundry.
argocd:
  enabled: true
  ## @param argocd.tolerations [array] Tolerations for ArgoCD
  ##
  tolerations: []
  ## @param argocd.affinity [object] Affinity for ArgoCD
  ##
  affinity: {}
  ## @param argocd.valuesOverride [object] Config override from default config values
  ##
  valuesOverride: {}

## @section argoWorkflows parameters
## @param argoWorkflows.enabled Flag to enable Argo Workflows
##
argoWorkflows:
  enabled: true
  ## @param argoWorkflows.tolerations [array] Tolerations for Argo Workflows
  ##
  tolerations: []
  ## @param argoWorkflows.affinity [object] Affinity for Argo Workflows
  ##
  affinity: {}
  ## @param argoWorkflows.valuesOverride [object] Config override from default config values
  ##
  valuesOverride: {}

## @section argoRollouts parameters
## @param argoRollouts.enabled Flag to enable Argo Rollouts
## Argo Rollouts is mandatory for Truefoundry to work. 
##
argoRollouts:
  enabled: true
  ## @param argoRollouts.tolerations [array] Tolerations for Argo Rollouts
  ##
  tolerations: []
  ## @param argoRollouts.affinity [object] Affinity for Argo Rollouts
  ##
  affinity: {}
  ## @param argoRollouts.valuesOverride [object] Config override from default config values
  ##
  valuesOverride: {}

## @section certManager parameters
## @param certManager.enabled Flag to enable Cert Manager
##
certManager:
  enabled: false
  ## @param certManager.tolerations [array] Tolerations for Cert Manager
  ##
  tolerations: []
  ## @param certManager.affinity [object] Affinity for Cert Manager
  ##
  affinity: {}
  ## @param certManager.valuesOverride [object] Config override from default config values
  ##
  valuesOverride: {}

## @section metricsServer parameters
## @param metricsServer.enabled Flag to enable Metrics Server
##
metricsServer:
  ##@param metricsServer.enabled Flag to enable Metrics Server
  enabled: true
  ## @param metricsServer.tolerations [array] Tolerations for Metrics Server
  ##
  tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "reserved-supercluster"
      effect: "NoSchedule"
  ## @param metricsServer.affinity [object] Affinity for Metrics Server
  ##
  affinity: {}
  ## @param metricsServer.valuesOverride [object] Config override from default config values
  ##
  valuesOverride: {}


## @section AWS parameters
## AWS parameters
##
aws:
  ## @subsection awsLoadBalancerController parameters
  ## @param aws.awsLoadBalancerController.enabled Flag to enable AWS Load Balancer Controller
  awsLoadBalancerController:
    enabled: true
    ## @param aws.awsLoadBalancerController.roleArn Role ARN for AWS Load Balancer Controller
    ##
    roleArn: ""
    ## @param aws.awsLoadBalancerController.vpcId VPC ID of AWS EKS cluster
    ##
    vpcId: ""
    ## @param aws.awsLoadBalancerController.region region of AWS EKS cluster
    ##
    region: ""
    ## @param aws.awsLoadBalancerController.affinity [object] Affinity for AWS LoadBalancer
    ##
    affinity: {}
    ## @param aws.awsLoadBalancerController.tolerations [array] Tolerations for AWS LoadBalancer
    ##
    tolerations: []
    ## @param aws.awsLoadBalancerController.valuesOverride [object] Config override from default config values
    ##
    valuesOverride: {}


  ## @subsection karpenter parameters
  ## @param aws.karpenter.enabled Flag to enable Karpenter
  ##
  karpenter:
    enabled: true
    ## @param aws.karpenter.clusterEndpoint Cluster endpoint for Karpenter
    ##
    clusterEndpoint: ""
    ## @param aws.karpenter.roleArn Role ARN for Karpenter
    ##
    roleArn: ""
    ## @param aws.karpenter.instanceProfile Instance profile for Karpenter
    ##
    instanceProfile: ""
    ## @param aws.karpenter.defaultZones [array] Default zones list for Karpenter
    ##
    defaultZones: []
    ## @param aws.karpenter.affinity [object] Affinity for Karpenter
    ##
    affinity: {}
    ## @param aws.karpenter.tolerations [array] Tolerations for Karpenter
    ##
    tolerations: []

    ## @param aws.karpenter.webhook.enabled Flag to enable Karpenter webhook
    ##
    webhook:
      enabled: true

    ## @param aws.karpenter.interruptionQueue Interruption queue name for Karpenter
    ##
    interruptionQueue: ""

    ## @param aws.karpenter.valuesOverride [object] Config override from default config values
    ##
    valuesOverride: {}
    
    ## @param aws.karpenter.config.valuesOverride [object] Config override for karpenter config
    config:
      valuesOverride: {}

  ## @subsection awsEbsCsiDriver parameters
  ## @param aws.awsEbsCsiDriver.enabled Flag to enable AWS EBS CSI Driver
  ##
  awsEbsCsiDriver:
    enabled: true
    ## @param aws.awsEbsCsiDriver.roleArn Role ARN for AWS EBS CSI Driver
    ##
    roleArn: ""
    ## @param aws.awsEbsCsiDriver.affinity [object] Affinity for AWS EBS CSI Driver
    ##
    affinity: {}
    ## @param aws.awsEbsCsiDriver.tolerations [array] Tolerations for AWS EBS CSI Driver
    ##
    tolerations: []
    ## @param aws.awsEbsCsiDriver.valuesOverride [object] Config override from default config values
    ##
    valuesOverride: {}

  ## @subsection awsEfsCsiDriver parameters
  ## @param aws.awsEfsCsiDriver.enabled Flag to enable AWS EFS CSI Driver
  ##
  awsEfsCsiDriver:
    enabled: true
    ## @param aws.awsEfsCsiDriver.fileSystemId File system ID for AWS EFS CSI Driver
    ##
    fileSystemId: ""
    ## @param aws.awsEfsCsiDriver.roleArn Role ARN for AWS EFS CSI Driver
    ##
    roleArn: ""
    ## @param aws.awsEfsCsiDriver.affinity [object] Affinity for AWS EFS CSI Driver
    ##
    affinity: {}
    ## @param aws.awsEfsCsiDriver.tolerations [array] Tolerations for AWS EFS CSI Driver
    ##
    tolerations: []
    ## @param aws.awsEfsCsiDriver.valuesOverride [object] Config override from default config values
    ##
    valuesOverride: {}
  
  ## @param aws.inferentia.enabled Flag to enable Inferentia 
  inferentia:
    enabled: false
    ## @param aws.inferentia.affinity [object] Affinity for AWS EFS CSI Driver
    ##
    affinity: {}
    ## @param aws.inferentia.tolerations [array] Tolerations for AWS EFS CSI Driver
    ##
    tolerations: []
    ## @param aws.inferentia.valuesOverride [object] Config override from default config values
    ##
    valuesOverride: {}


## @section gpu parameters
## @param gpu.enabled Flag to enable Tfy GPU Operator
##
gpu:
  enabled: true
  ## @param gpu.clusterType Cluster type for Tfy GPU Operator
  ##
  clusterType: awsEks
  ## @param gpu.valuesOverride [object] Config override from default config values
  ##
  valuesOverride: {}

## @section truefoundry parameters
## @param truefoundry.enabled Flag to enable TrueFoundry
## This installs the Truefoundry control plane helm chart. You can make it true
## if you want to install Truefoundry control plane.
##
truefoundry:
  enabled: false
  ## @param truefoundry.devMode.enabled Flag to enable TrueFoundry Dev mode
  ##
  devMode:
    enabled: false
  ## @param truefoundry.valuesOverride [object] Config override from default config values
  ##
  valuesOverride: {}
  ## @section truefoundryBootstrap parameters
  ## @param truefoundry.truefoundryBootstrap.enabled Flag to enable bootstrap job to prep cluster for truefoundry installation
  truefoundryBootstrap:
    enabled: true

  ## @section Truefoundry virtual service parameters
  virtualservice:
    ## @param truefoundry.virtualservice.enabled Flag to enable virtualservice
    enabled: false
    ## @param truefoundry.virtualservice.hosts [array] Hosts for truefoundry virtualservice
    hosts: []
    ## @param truefoundry.virtualservice.gateways [array] Istio gateways to be configured for virtualservice
    gateways: []

  ## @section database. Can be left empty if using the dev mode parameters
  database:
    ## @param truefoundry.database.host Hostname of the database
    host: ""
    ## @param truefoundry.database.name Name of the database
    name: ""
    ## @param truefoundry.database.username Username of the database
    username: ""
    ## @param truefoundry.database.password Password of the database
    password: ""
  ## @param truefoundry.tfyApiKey API Key for TrueFoundry
  tfyApiKey: ""
  ## @param truefoundry.truefoundryImagePullConfigJSON Json config for authenticating to the TrueFoundry registry
  truefoundryImagePullConfigJSON: ""
  ## @param truefoundry.truefoundry_iam_role_arn_annotations [object] IAM role annotations for service accounts
  ## Annotations to be added to service accounts for cloud provider IAM integration
  ## For AWS EKS: eks.amazonaws.com/role-arn
  ## For GCP GKE: iam.gke.io/gcp-service-account
  ## For other providers: empty object
  truefoundry_iam_role_arn_annotations: 
    
    eks.amazonaws.com/role-arn: ""
    
  
  ## @param truefoundry.s3proxy.enabled Flag to enable S3 Proxy
  s3proxy:
    enabled: false
  ## @param truefoundry.sparkHistoryServer.enabled Flag to enable Spark History Server
  sparkHistoryServer:
    enabled: false
  ## @param truefoundry.tfyWorkflowAdmin.enabled Flag to enable Tfy Workflow Admin
  tfyWorkflowAdmin:
    enabled: false

  ## @param truefoundry.tolerations [array] Tolerations for the truefoundry components
  ##
  
  tolerations:
  - key: "class.truefoundry.com/component"
    value: "control-plane"
    effect: "NoSchedule"
  
  ## @param truefoundry.affinity [object] Affinity for the truefoundry components
  ##
  
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: class.truefoundry.com/component
                operator: In
                values:
                  - control-plane
  

## @section loki parameters
## @param loki.enabled Flag to enable Loki
##
loki:
  enabled: true
  ## @param loki.valuesOverride [object] Config override from default config values
  ##
  valuesOverride: {}

  ## @param loki.affinity [object] Affinity for loki statefulset pod
  ##
  
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: class.truefoundry.com/component
                operator: In
                values:
                  - critical
  

  ## @param loki.tolerations [array] Tolerations for loki statefulset pod
  ##
  
  tolerations:
  - key: "class.truefoundry.com/component"
    value: "critical"
    effect: "NoSchedule"
  

## @section istio parameters
## @param istio.enabled Flag to enable Istio
##
istio:
  ## @param istio.enabled Flag to enable Istio Base
  ##
  enabled: true

  base:
    ## @param istio.base.valuesOverride [object] Config override from default config values
    ##
    valuesOverride: {}
  
  ## @param istio.gateway.annotations [object] Annotations for Istio Gateway
  gateway:
    
    annotations:
      "service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy": "ELBSecurityPolicy-TLS13-1-2-2021-06"
      "service.beta.kubernetes.io/aws-load-balancer-name": "<terragruntOutput.cluster.cluster_name.raw>"
      "service.beta.kubernetes.io/aws-load-balancer-type": "external"
      "service.beta.kubernetes.io/aws-load-balancer-scheme": "internet-facing"
      "service.beta.kubernetes.io/aws-load-balancer-ssl-ports": "https"
      "service.beta.kubernetes.io/aws-load-balancer-alpn-policy": "HTTP2Preferred"
      "service.beta.kubernetes.io/aws-load-balancer-backend-protocol": "tcp"
      "service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags":
        cluster-name=<terragruntOutput.cluster.cluster_name.raw>,  truefoundry.com/managed=true,
        owner=Truefoundry, application=tfy-istio-ingress
      "service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled": "true"
    
    
    ## @param istio.gateway.affinity [object] Affinity for the gateway pods
    ##
    
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: class.truefoundry.com/component
                  operator: In
                  values:
                    - critical
    
    
    ## @param istio.gateway.tolerations [array] Tolerations for the gateway pods
    ##
    
    tolerations:
    - key: "class.truefoundry.com/component"
      value: "critical"
      effect: "NoSchedule"
    

    ## @param istio.gateway.valuesOverride Config override from default config values
    ##
    valuesOverride: {}
  ## @section istio discovery parameters
  discovery:
    ## @param istio.discovery.hub Hub for the istio image
    hub: gcr.io/istio-release
    ## @param istio.discovery.tolerations [array] Tolerations for Istio Discovery
    ##
    tolerations: []
    ## @param istio.discovery.affinity [object] Affinity for Istio Discovery
    ##
    affinity: {}
    ## @param istio.discovery.valuesOverride Config override from default config values
    ##
    valuesOverride: {}
  ## @param istio.tfyGateway.httpsRedirect Flag to enable HTTPS redirect for Istio Gateway
  tfyGateway:
    
    httpsRedirect: true
    

## @section keda parameters
## @param keda.enabled Flag to enable Keda
##
keda:
  enabled: true
  ## @param keda.tolerations [array] Tolerations for Keda
  ##
  tolerations: []
  ## @param keda.affinity [object] Affinity for Keda
  ##
  affinity: {}
  ## @param keda.valuesOverride Config override from default config values
  ##
  valuesOverride: {}

## @section sparkOperator parameters
## @param sparkOperator.enabled Flag to enable Spark Operator
##
sparkOperator:
  enabled: false
  ## @param sparkOperator.tolerations [array] Tolerations for Spark Operator
  ##
  tolerations: []
  ## @param sparkOperator.affinity [object] Affinity for Spark Operator
  ##
  affinity: {}
  ## @param sparkOperator.valuesOverride Config override from default config values
  ##
  valuesOverride: {}

## @section kubecost parameters
## @param kubecost.enabled Flag to enable Kubecost
##
kubecost:
  enabled: true
  ## @param kubecost.tolerations [array] Tolerations for Kubecost
  ##
  tolerations: []
  ## @param kubecost.affinity [object] Affinity for Kubecost
  ##
  affinity: {}
  ## @param kubecost.valuesOverride Config override from default config values
  ##
  valuesOverride: {}

## @section prometheus parameters
## @param prometheus.enabled Flag to enable Prometheus
##
prometheus:
  enabled: true
  ## @param prometheus.additionalScrapeConfigs [array] Additional scrape configs for Prometheus
  ##
  additionalScrapeConfigs: []
  ## @param prometheus.alertmanager [object] Alertmanager configuration for Prometheus
  ##
  alertmanager:
    config:
      receivers:
        - name: tfy-agent
          webhook_configs:
              - url: http://tfy-agent.tfy-agent.svc.cluster.local:3000/alerts
                send_resolved: true

  ## @param prometheus.affinity [object] Affinity for prometheus statefulset pod
  ##
  
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: class.truefoundry.com/component
                operator: In
                values:
                  - critical
  

  ## @param prometheus.tolerations [array] Tolerations for prometheus statefulset pod
  ##
  
  tolerations:
  - key: "class.truefoundry.com/component"
    value: "critical"
    effect: "NoSchedule"
  

  ## @param prometheus.valuesOverride [object] Config override from default config values
  ##
  valuesOverride: {}
  
  config:
    ## @param prometheus.config.enabled Flag to enable prometheus config
    ##
    enabled: true

    ## @param prometheus.config.valuesOverride [object] Config override from default config values
    ##
    valuesOverride: {}

    ## @param prometheus.config.extraObjects [array] Extra objects for prometheus config
    ##
    extraObjects: []

## @section grafana parameters
## @param grafana.enabled Flag to enable Grafana
##
grafana:
  enabled: false
  ## @param grafana.tolerations [array] Tolerations for Grafana
  ##
  tolerations: []
  ## @param grafana.affinity [object] Affinity for Grafana
  ##
  affinity: {}
  ## @param grafana.valuesOverride [object] Config override from default config values
  ##
  valuesOverride: {}

## @section tfyAgent parameters
## @param tfyAgent.enabled Flag to enable Tfy Agent
##
tfyAgent:
  enabled: true
  ## @param tfyAgent.valuesOverride [object] Config override from default config values
  ##
  valuesOverride: {}

  ## @param tfyAgent.tolerations [array] Tolerations for the agent pods
  ## 
  
  tolerations:
  - key: "class.truefoundry.com/component"
    value: "critical"
    effect: "NoSchedule"
  

  ## @param tfyAgent.affinity [object] Affinity for the agent pods
  ## 
  
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: class.truefoundry.com/component
                operator: In
                values:
                  - critical
  

  ## @param tfyAgent.clusterToken cluster token
  ## Token for cluster authentication
  ##
  clusterToken: ""

  ## @param tfyAgent.clusterTokenSecret Secret name for cluster token
  ## Secret for cluster token
  clusterTokenSecret: ""

## @section elasti parameters
## @param elasti.enabled Flag to enable Elasti
##
elasti:
  enabled: false
  ## @param elasti.valuesOverride [object] Config override from default config values
  ##
  valuesOverride: {}

## @section jspolicy parameters
## @param jspolicy.enabled Flag to enable jspolicy. No policy is applied by default
##
jspolicy:
  ## @param jspolicy.enabled Flag to enable jspolicy
  enabled: false
  ## @param jspolicy.valuesOverride [object] Config override from default config values
  ##
  valuesOverride: {}

  ## @param jspolicy.affinity [object] Affinity for jspolicy
  ##
  
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: class.truefoundry.com/component
                operator: In
                values:
                  - critical
  

  ## @param jspolicy.tolerations [array] Tolerations for jspolicy
  ##
  
  tolerations:
  - key: "class.truefoundry.com/component"
    value: "critical"
    effect: "NoSchedule"
  

  ## @param jspolicy.config.valuesOverride [object] Config override from default config values
  ##
  config:
    valuesOverride: {}

