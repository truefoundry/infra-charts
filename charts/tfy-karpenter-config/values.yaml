## @section Cluster configurations
##
cluster:
  ## @param cluster.name Name of the EKS cluster
  ##
  name: "$CLUSTER_NAME"

## @section Karpenter configurations
##
karpenter:
  ## @param karpenter.instanceProfile Instance profile of the karpenter
  ##
  instanceProfile: ""

  ## Default Node Template Config
  defaultNodeTemplate:
    ## @param karpenter.defaultNodeTemplate.name Name of the AWS node class
    name: default
    ## @param karpenter.defaultNodeTemplate.instanceProfile Instance profile override for the node template
    instanceProfile: ""
    ## @param karpenter.defaultNodeTemplate.rootVolumeSize Size for the root volume attached to node
    rootVolumeSize: 100Gi
    ## @param karpenter.defaultNodeTemplate.encrypted Encryption for EBS volumes
    encrypted: true
    ## @param karpenter.defaultNodeTemplate.extraTags [object] Additional tags for the node template.
    extraTags: {}
    ## @param karpenter.defaultNodeTemplate.amiFamily AMI family to use for node template
    amiFamily: ""
    ## @param karpenter.defaultNodeTemplate.amiSelectorTerms [array] AMI selector terms for the node template, conditions are ANDed
    # amiSelectorTerms:
    # - tags:
    #     karpenter.sh/discovery: "${CLUSTER_NAME}"
    #     environment: test
    # - name: my-ami
    # - id: ami-123
    amiSelectorTerms:
    - alias: al2023@latest
    ## @param karpenter.defaultNodeTemplate.userData User data to append in the default node template. Set this to "" to disable injection.
    userData: ""
    ## @param karpenter.defaultNodeTemplate.metadataOptions [object] Metadata options to be passed to the default node template.
    # metadataOptions:
    #   httpEndpoint: enabled
    #   httpProtocolIPv6: disabled
    #   httpPutResponseHopLimit: 1
    #   httpTokens: required
    metadataOptions: {}
    ## @param karpenter.defaultNodeTemplate.detailedMonitoring Set this to true to enable EC2 detailed cloudwatch monitoring.
    detailedMonitoring: false
    ## @param karpenter.defaultNodeTemplate.extraSubnetTags [object] Additional tags for the subnet.
    extraSubnetTags: {}
    ## @param karpenter.defaultNodeTemplate.extraSecurityGroupTags [object] Additional tags for the security group.
    extraSecurityGroupTags: {}

  ## Default Node Pool Config
  defaultNodePool:
    ## @param karpenter.defaultNodePool.name Name of the default node pool
    name: default-nodepool
    ## @param karpenter.defaultNodePool.weight Weight for the default node pool
    weight: 10
    ## @param karpenter.defaultNodePool.labels [object] Labels for the default node pool
    labels: {}
    ## @param karpenter.defaultNodePool.taints [array] Taints for the default node pool
    taints: []
    ## @param karpenter.defaultNodePool.disruption [object] Consolidation policy for disruption
    disruption:
      budgets:
      - nodes: 10%
      - nodes: 1
        reasons:
        - "Drifted"
      consolidateAfter: 15m
      consolidationPolicy: WhenEmptyOrUnderutilized
    ## @param karpenter.defaultNodePool.capacityTypes [array] Capacity types for the default node pool
    capacityTypes:
    - spot
    - on-demand
    ## @param karpenter.defaultNodePool.zones [array] Zones for the default node pool
    zones: []
    ## @param karpenter.defaultNodePool.architectures [array] Architectures for the default node pool
    architectures:
    - amd64
    ## @param karpenter.defaultNodePool.instanceFamilies.notAllowed [array] Not allowed instance families for the default node pool
    instanceFamilies:
      notAllowed: ["t3", "t2", "t3a", "p2", "p3", "p4d", "p4de", "p5", "p5e", "p5en", "g4dn", "g4ad", "g5", "g6", "gr6", "g6e", "c1", "cc1", "cc2", "cg1", "cg2", "cr1", "g1", "g2", "hi1", "hs1", "m1", "m2", "m3", "m5a", "m5ad", "r5a" , "r5ad", "g4ad", "inf1", "inf2", "trn1", "trn1n"]
    ## @param karpenter.defaultNodePool.instanceSizes.notAllowed [array] Not allowed instance sizes for the default node pool
    instanceSizes:
      notAllowed: ["nano", "micro", "small", "medium", "large", "metal", "metal-16xl", "metal-24xl", "metal-48xl"]
    ## @param karpenter.defaultNodePool.limits [object] compute limits for the default nodepool
    limits: {}
    ## @param karpenter.defaultNodePool.additionalRequirements [array] List of additional requirements for default nodepool
    additionalRequirements: []

  ## Default GPU Node Template Config
  gpuDefaultNodeTemplate:
    ## @param karpenter.gpuDefaultNodeTemplate.enabled Enable the GPU node pool
    enabled: true
    ## @param karpenter.gpuDefaultNodeTemplate.name Name of the AWS node class
    name: gpu-default
    ## @param karpenter.gpuDefaultNodeTemplate.instanceProfile Instance profile override for the node template
    instanceProfile: ""
    ## @param karpenter.gpuDefaultNodeTemplate.rootVolumeSize Size for the root volume attached to node
    rootVolumeSize: 100Gi
    ## @param karpenter.gpuDefaultNodeTemplate.encrypted Encryption for EBS volumes
    encrypted: true
    ## @param karpenter.gpuDefaultNodeTemplate.extraTags [object] Additional tags for the gpu node template.
    extraTags: {}
    ## @param karpenter.gpuDefaultNodeTemplate.detailedMonitoring Set this to true to enable EC2 detailed cloudwatch monitoring.
    detailedMonitoring: false
    ## @param karpenter.gpuDefaultNodeTemplate.amiFamily AMI family to use for node template
    amiFamily: ""
    ## @param karpenter.gpuDefaultNodeTemplate.amiSelectorTerms [array] AMI selector terms for the node template, conditions are ANDed
    # amiSelectorTerms:
    # - tags:
    #     karpenter.sh/discovery: "${CLUSTER_NAME}"
    #     environment: test
    # - name: my-ami
    # - id: ami-123
    amiSelectorTerms:
    - alias: al2023@latest
    ## @param karpenter.gpuDefaultNodeTemplate.userData User data script for GPU node template. Set this to "default" to let the chart automatically decide this. Set this to "" to disable this injection.
    userData: "default"
    ## @param karpenter.gpuDefaultNodeTemplate.metadataOptions [object] Metadata options to be passed to the GPU node template.
    # metadataOptions:
    #   httpEndpoint: enabled
    #   httpProtocolIPv6: disabled
    #   httpPutResponseHopLimit: 1
    #   httpTokens: required
    metadataOptions: {}
    ## @param karpenter.gpuDefaultNodeTemplate.extraSubnetTags [object] Additional tags for the subnet.
    extraSubnetTags: {}
    ## @param karpenter.gpuDefaultNodeTemplate.extraSecurityGroupTags [object] Additional tags for the security group.
    extraSecurityGroupTags: {}

  ## GPU Node Pool Config
  gpuNodePool:
    ## @param karpenter.gpuNodePool.enabled Enable the GPU node pool
    enabled: true
    ## @param karpenter.gpuNodePool.name Name of the GPU node pool
    name: gpu-nodepool
    ## @param karpenter.gpuNodePool.weight Weight for the GPU node pool
    weight: 10
    ## @param karpenter.gpuNodePool.labels [object] Labels for the GPU node pool
    labels: {}
    ## @param karpenter.gpuNodePool.taints [array] Taints for the GPU node pool
    taints: []
    ## @param karpenter.gpuNodePool.disruption [object] Consolidation policy for disruption
    disruption:
      budgets:
      - nodes: 10%
      - nodes: 1
        reasons:
        - "Drifted"
      consolidateAfter: 5m
      consolidationPolicy: WhenEmptyOrUnderutilized
    ## @param karpenter.gpuNodePool.capacityTypes [array] Capacity types for the GPU node pool
    capacityTypes:
    - spot
    - on-demand
    ## @param karpenter.gpuNodePool.zones [array] Zones for the GPU node pool
    zones: []
    ## @param karpenter.gpuNodePool.architectures [array] Architectures for the GPU node pool
    architectures:
    - amd64
    ## @param karpenter.gpuNodePool.instanceFamilies.allowed [array] Allowed instance families for the GPU node pool
    instanceFamilies:
      allowed:
      - p2
      - p3
      - p4d
      - p4de
      - p5
      - p5e
      - p5en
      - g4dn
      - g5
      - g6
      - gr6
      - g6e
    ## @param karpenter.gpuNodePool.instanceSizes.notAllowed [array] Not allowed instance sizes for the GPU node pool
    instanceSizes:
      notAllowed:
      - nano
      - micro
      - small
      - medium
      - large
      - metal
      - metal-16xl
      - metal-24xl
      - metal-48xl
    ## @param karpenter.gpuNodePool.limits [object] compute limits for the GPU node pool
    limits: {}
    ## @param karpenter.gpuNodePool.additionalRequirements [array] List of additional requirements for GPU node pool
    additionalRequirements: []

  ## Control Plane Node Template Config
  controlPlaneNodeTemplate:
    ## @param karpenter.controlPlaneNodeTemplate.enabled Enable the control plane node template
    enabled: true
    ## @param karpenter.controlPlaneNodeTemplate.name Name of the AWS node template
    name: controlplane-node-template
    ## @param karpenter.controlPlaneNodeTemplate.instanceProfile Instance profile override for the node template
    instanceProfile: ""
    ## @param karpenter.controlPlaneNodeTemplate.rootVolumeSize Size for the root volume attached to node
    rootVolumeSize: 100Gi
    ## @param karpenter.controlPlaneNodeTemplate.encrypted Encryption for EBS volumes
    encrypted: true
    ## @param karpenter.controlPlaneNodeTemplate.extraTags [object] Additional tags for the node template.
    extraTags: {}
    ## @param karpenter.controlPlaneNodeTemplate.amiFamily AMI family to use for node template
    amiFamily: ""
    ## @param karpenter.controlPlaneNodeTemplate.amiSelectorTerms [array] AMI selector terms for the node template, conditions are ANDed
    # amiSelectorTerms:
    # - tags:
    #     karpenter.sh/discovery: "${CLUSTER_NAME}"
    #     environment: test
    # - name: my-ami
    # - id: ami-123
    amiSelectorTerms:
    - alias: al2023@latest
    ## @param karpenter.controlPlaneNodeTemplate.userData User data script for control-plane node template. Set this to "" to disable this injection.
    userData: ""
    ## @param karpenter.controlPlaneNodeTemplate.metadataOptions [object] Metadata options to be passed to the instance.
    # metadataOptions:
    #   httpEndpoint: enabled
    #   httpProtocolIPv6: disabled
    #   httpPutResponseHopLimit: 1
    #   httpTokens: required
    metadataOptions: {}
    ## @param karpenter.controlPlaneNodeTemplate.detailedMonitoring Set this to true to enable EC2 detailed cloudwatch monitoring.
    detailedMonitoring: false
    ## @param karpenter.controlPlaneNodeTemplate.extraSubnetTags [object] Additional tags for the subnet.
    extraSubnetTags: {}
    ## @param karpenter.controlPlaneNodeTemplate.extraSecurityGroupTags [object] Additional tags for the security group.
    extraSecurityGroupTags: {}

  ## Control Plane Node Pool Config
  controlPlaneNodePool:
    ## @param karpenter.controlPlaneNodePool.enabled Enable the control plane node pool
    enabled: true
    ## @param karpenter.controlPlaneNodePool.name Name of the control plane node pool
    name: control-plane-nodepool
    ## @param karpenter.controlPlaneNodePool.weight Weight for the control plane node pool
    weight: 10
    ## @param karpenter.controlPlaneNodePool.labels [object] Labels for the control plane node pool
    labels:
      class.truefoundry.com/component: "control-plane"
    ## @param karpenter.controlPlaneNodePool.taints [array] Taints for the control plane node pool
    taints:
    - key: "class.truefoundry.com/component"
      value: "control-plane"
      effect: "NoSchedule"
    ## @param karpenter.controlPlaneNodePool.disruption [object] Consolidation policy for disruption
    disruption:
      budgets:
      - nodes: 10%
      - nodes: 1
        reasons:
        - "Drifted"
      consolidateAfter: 15m
      consolidationPolicy: WhenEmptyOrUnderutilized
    ## @param karpenter.controlPlaneNodePool.capacityTypes [array] Capacity types for the control plane node pool
    capacityTypes:
    - on-demand
    ## @param karpenter.controlPlaneNodePool.zones [array] Zones for the control plane node pool
    zones: []
    ## @param karpenter.controlPlaneNodePool.architectures [array] Architectures for the control plane node pool
    architectures:
    - amd64
    instanceFamilies:
      ## @param karpenter.controlPlaneNodePool.instanceFamilies.allowed [array] Allowed instance families for the control plane node pool
      allowed: []
      ## @param karpenter.controlPlaneNodePool.instanceFamilies.notAllowed [array] Not allowed instance families for the control plane node pool
      notAllowed: ["t3", "t2", "t3a", "p2", "p3", "p4d", "p4de", "p5", "p5e", "p5en", "g4dn", "g4ad", "g5", "g6", "gr6", "g6e", "inf1", "inf2", "trn1", "trn1n", "c1", "cc1", "cc2", "cg1", "cg2", "cr1", "g1", "g2", "hi1", "hs1", "m1", "m2", "m3"]
    instanceSizes:
      ## @param karpenter.controlPlaneNodePool.instanceSizes.allowed [array] Allowed instance sizes for the control plane node pool
      allowed: []
      ## @param karpenter.controlPlaneNodePool.instanceSizes.notAllowed [array] Not allowed instance sizes for the control plane node pool
      notAllowed: ["nano", "micro", "small", "medium", "large", "12xlarge", "16xlarge", "24xlarge", "32xlarge", "metal", "metal-16xl", "metal-24xl", "metal-48xl"]
    ## @param karpenter.controlPlaneNodePool.limits [object] compute limits for the control plane node pool
    limits: {}
    ## @param karpenter.controlPlaneNodePool.additionalRequirements [array] List of additional requirements for control plane node pool

    additionalRequirements: []

  ## Default Inferentia Node Template Config
  inferentiaDefaultNodeTemplate:
    ## @param karpenter.inferentiaDefaultNodeTemplate.enabled Enable the inferentia node pool
    enabled: false
    ## @param karpenter.inferentiaDefaultNodeTemplate.name Name of the AWS node class
    name: inferentia-default
    ## @param karpenter.inferentiaDefaultNodeTemplate.instanceProfile Instance profile override for the node template
    instanceProfile: ""
    ## @param karpenter.inferentiaDefaultNodeTemplate.rootVolumeSize Size for the root volume attached to node
    rootVolumeSize: 100Gi
    ## @param karpenter.inferentiaDefaultNodeTemplate.encrypted Encryption for EBS volumes
    encrypted: true
    ## @param karpenter.inferentiaDefaultNodeTemplate.extraTags [object] Additional tags for the node template.
    extraTags: {}
    ## @param karpenter.inferentiaDefaultNodeTemplate.detailedMonitoring Set this to true to enable EC2 detailed cloudwatch monitoring
    detailedMonitoring: false
    ## @param karpenter.inferentiaDefaultNodeTemplate.amiFamily AMI family to use for node template
    amiFamily: ""
    ## @param karpenter.inferentiaDefaultNodeTemplate.amiSelectorTerms [array] AMI selector terms for the node template, conditions are ANDed
    # amiSelectorTerms:
    # - tags:
    #     karpenter.sh/discovery: "${CLUSTER_NAME}"
    #     environment: test
    # - name: my-ami
    # - id: ami-123
    amiSelectorTerms:
    - alias: al2023@latest
    ## @param karpenter.inferentiaDefaultNodeTemplate.userData User data script for GPU node template. Set this to "" to disable this injection.
    userData: ""
    ## @param karpenter.inferentiaDefaultNodeTemplate.metadataOptions [object] Metadata options to be passed to the inferentia node template.
    # metadataOptions:
    #   httpEndpoint: enabled
    #   httpProtocolIPv6: disabled
    #   httpPutResponseHopLimit: 1
    #   httpTokens: required
    metadataOptions: {}
    ## @param karpenter.inferentiaDefaultNodeTemplate.extraSubnetTags [object] Additional tags for the subnet.
    extraSubnetTags: {}
    ## @param karpenter.inferentiaDefaultNodeTemplate.extraSecurityGroupTags [object] Additional tags for the security group.
    extraSecurityGroupTags: {}

  ## Inferentia Node Pool Config
  inferentiaNodePool:
    ## @param karpenter.inferentiaNodePool.enabled Enable the Inferentia node pool
    enabled: false
    ## @param karpenter.inferentiaNodePool.name Name of the Inferentia node pool
    name: inferentia-nodepool
    ## @param karpenter.inferentiaNodePool.weight Weight for the Inferentia node pool
    weight: 10
    ## @param karpenter.inferentiaNodePool.labels [object] Labels for the Inferentia node pool
    labels: {}
    ## @param karpenter.inferentiaNodePool.taints [array] Taints for the Inferentia node pool
    taints: []
    ## @param karpenter.inferentiaNodePool.disruption [object] Consolidation policy for disruption
    disruption:
      budgets:
      - nodes: 10%
      - nodes: 1
        reasons:
        - "Drifted"
      consolidateAfter: 15m
      consolidationPolicy: WhenEmptyOrUnderutilized
    ## @param karpenter.inferentiaNodePool.capacityTypes [array] Capacity types for the Inferentia node pool
    capacityTypes:
    - spot
    - on-demand
    ## @param karpenter.inferentiaNodePool.zones [array] Zones for the Inferentia node pool
    zones: []
    ## @param karpenter.inferentiaNodePool.architectures [array] Architectures for the Inferentia node pool
    architectures:
    - amd64
    ## @param karpenter.inferentiaNodePool.instanceFamilies.allowed [array] Allowed instance families for the Inferentia node pool
    instanceFamilies:
      allowed: ["inf1", "inf2"]
    ## @param karpenter.inferentiaNodePool.instanceSizes.notAllowed [array] Not allowed instance sizes for the Inferentia node pool
    instanceSizes:
      notAllowed: ["nano", "micro", "small", "medium", "large", "metal", "48xlarge", "metal-16xl", "metal-24xl", "metal-48xl"]
    ## @param karpenter.inferentiaNodePool.limits [object] compute limits for the Inferentia node pool
    limits: {}
    ## @param karpenter.inferentiaNodePool.additionalRequirements [array] List of additional requirements for Inferentia node pool
    additionalRequirements: []

  ## @section critical Section to create on-demand nodepool for critical components
  critical:
    ## @param karpenter.critical.enabled Enable the critical plane node pool
    enabled: true
    ## @param karpenter.critical.name Name of the critical node pool
    name: tfy-critical-nodepool
    ## @param karpenter.critical.weight Weight for the critical node pool
    weight: 100
    ## @param karpenter.critical.labels [object] Labels for the critical node pool
    labels:
      class.truefoundry.com/component: "critical"
    ## @param karpenter.critical.taints [array] Taints for the critical node pool
    taints:
    - key: "class.truefoundry.com/component"
      value: "critical"
      effect: "NoSchedule"
    ## @param karpenter.critical.disruption [object] Consolidation policy for disruption
    disruption:
      budgets:
      - nodes: 10%
      - nodes: 1
        reasons:
        - "Drifted"
      consolidateAfter: 15m
      consolidationPolicy: WhenEmptyOrUnderutilized
    ## @param karpenter.critical.capacityTypes [array] Capacity types for the critical node pool
    capacityTypes:
    - on-demand
    ## @param karpenter.critical.zones [array] Zones for the critical node pool
    zones: []
    ## @param karpenter.critical.architectures [array] Architectures for the critical node pool
    architectures:
    - amd64
    instanceFamilies:
      ## @param karpenter.critical.instanceFamilies.allowed [array] Allowed instance families for the critical node pool
      allowed: []
      ## @param karpenter.critical.instanceFamilies.notAllowed [array] Not allowed instance families for the critical node pool
      notAllowed: ["t3", "t2", "t3a", "p2", "p3", "p4d", "p4de", "p5", "p5e", "p5en", "g4dn", "g4ad", "g5", "g6", "gr6", "g6e", "inf1", "inf2", "trn1", "trn1n", "c1", "cc1", "cc2", "cg1", "cg2", "cr1", "g1", "g2", "hi1", "hs1", "m1", "m2", "m3"]
    instanceSizes:
      ## @param karpenter.critical.instanceSizes.allowed [array] Allowed instance sizes for the critical node pool
      allowed: []
      ## @param karpenter.critical.instanceSizes.notAllowed [array] Not allowed instance sizes for the critical node pool
      notAllowed: ["nano", "micro", "small", "medium", "large", "12xlarge", "16xlarge", "24xlarge", "32xlarge", "metal", "metal-16xl", "metal-24xl", "metal-48xl"]
    ## @param karpenter.critical.limits [object] compute limits for the critical node pool
    limits: {}
    ## @param karpenter.critical.additionalRequirements [array] List of additional requirements for critical node pool
    additionalRequirements: []

    nodeclass:
      ## @param karpenter.critical.nodeclass.create Specifies if the EC2 nodeclass with nodeclass.name should be created
      create: true
      ## @param karpenter.critical.nodeclass.name [array] Name of the nodeclass. If create is not set, existing nodeclass is used. 
      name: "tfy-critical-node-template"
      ## @param karpenter.critical.nodeclass.instanceProfile Instance profile override for the node template
      instanceProfile: ""
      ## @param karpenter.critical.nodeclass.rootVolumeSize Size for the root volume attached to the node
      rootVolumeSize: 100Gi
      ## @param karpenter.critical.nodeclass.encrypted Encryption for EBS volumes
      encrypted: true
      ## @param karpenter.critical.nodeclass.extraTags [object] Additional tags for the node template.
      extraTags: {}
      ## @param karpenter.critical.nodeclass.detailedMonitoring Set this to true to enable EC2 detailed cloudwatch monitoring.
      detailedMonitoring: false
      ## @param karpenter.critical.nodeclass.amiFamily AMI family to use for node template
      amiFamily: ""
      ## @param karpenter.critical.nodeclass.amiSelectorTerms [array] AMI selector terms for the node template, conditions are ANDed
      # amiSelectorTerms:
      # - tags:
      #     karpenter.sh/discovery: "${CLUSTER_NAME}"
      #     environment: test
      # - name: my-ami
      # - id: ami-123
      amiSelectorTerms:
      - alias: al2023@latest
      ## @param karpenter.critical.nodeclass.userData User data script for critical node template. Set this to "" to disable this injection.
      userData: ""
      ## @param karpenter.critical.nodeclass.metadataOptions [object] Metadata options to be passed to the instance.
      # metadataOptions:
      #   httpEndpoint: enabled
      #   httpProtocolIPv6: disabled
      #   httpPutResponseHopLimit: 1
      #   httpTokens: required
      metadataOptions: {}
      ## @param karpenter.critical.nodeclass.extraSubnetTags [object] Additional tags for the subnet.
      extraSubnetTags: {}
      ## @param karpenter.critical.nodeclass.extraSecurityGroupTags [object] Additional tags for the security group.
      extraSecurityGroupTags: {}

## @param extraObjects [array] Additional objects to be created along with karpenter
extraObjects: []
