## Configuration for tfy-prometheus-config
## @section global Global settings for prometheus
global:
  ## @param global.labels
  ##
  labels: {}
  ## @param global.annotations
  ##
  annotations: {}
## @section scrapeConfigs Scrape configs for prometheus
scrapeConfigs:
  # scrapeConfigs.envoy Scrape config for envoy pods
  envoy:
    ## @param scrapeConfigs.envoy.enabled Enable scrape config for envoy
    enabled: true
    ## @param scrapeConfigs.envoy.name Name of the scrape config
    name: envoy-stats
    ## @param scrapeConfigs.envoy.jobName Job name for envoy
    jobName: envoy-stats
    ## @param scrapeConfigs.envoy.labels [object] Labels for envoy
    labels:
      release: prometheus
    ## @param scrapeConfigs.envoy.annotations [object] Annotations for envoy
    annotations: {}
    ## @param scrapeConfigs.envoy.metricsPath Metrics path for envoy
    metricsPath: /stats/prometheus
    ## @param scrapeConfigs.envoy.relabelings [array] Relabelings for envoy
    relabelings:
      - regex: .*-envoy-prom
        action: keep
        sourceLabels:
          - __meta_kubernetes_pod_container_port_name
      - targetLabel: pod
        action: replace
        sourceLabels:
          - __meta_kubernetes_pod_name
      - targetLabel: container
        action: replace
        sourceLabels:
          - __meta_kubernetes_pod_container_name
      - targetLabel: namespace
        action: replace
        sourceLabels:
          - __meta_kubernetes_namespace
      - action: replace
        targetLabel: node
        sourceLabels:
          - __meta_kubernetes_pod_node_name
    ## @param scrapeConfigs.envoy.metricsRelabelings [array] Metrics relabelings for envoy
    metricsRelabelings:
      - sourceLabels: [__name__]
        action: drop
        regex: envoy_(.+)
      - sourceLabels: [__name__]
        action: drop
        regex: (istio_response_bytes_bucket|istio_request_bytes_bucket|istio_request_bytes_count|istio_response_bytes_count)
  # scrapeConfigs.kubernetesPods Scrape config for kubernetes pods
  kubernetesPods:
    ## @param scrapeConfigs.kubernetesPods.enabled Enable scrape config for kubernetes pods
    enabled: true
    ## @param scrapeConfigs.kubernetesPods.name Name of the scrape config
    name: kubernetes-pods
    ## @param scrapeConfigs.kubernetesPods.jobName Job name for kubernetes pods
    jobName: kubernetes-pods
    ## @param scrapeConfigs.kubernetesPods.labels [object] Labels for kubernetes pods
    labels:
      release: prometheus
    ## @param scrapeConfigs.kubernetesPods.annotations [object] Annotations for kubernetes pods
    annotations: {}
    ## @param scrapeConfigs.kubernetesPods.relabelings [array] Relabelings for kubernetes pods
    relabelings:
      - action: drop
        sourceLabels: [__meta_kubernetes_namespace]
        regex: (istio-system|cert-manager|kube-system)
      - action: keep
        sourceLabels: [__meta_kubernetes_pod_container_init, __meta_kubernetes_pod_container_name]
        # All normal containers and no init containers except istio-proxy
        regex: "(false;.*)|(true;istio-proxy)"
      - sourceLabels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: "true"
      - sourceLabels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
        action: replace
        targetLabel: __scheme__
        regex: (https?)
      - sourceLabels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        targetLabel: __metrics_path__
        regex: (.+)
      - sourceLabels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        targetLabel: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - sourceLabels: [__meta_kubernetes_pod_name]
        targetLabel: pod
      - sourceLabels: [__meta_kubernetes_pod_container_name]
        targetLabel: container
      - sourceLabels: [__meta_kubernetes_namespace]
        targetLabel: namespace
      - sourceLabels: [__meta_kubernetes_pod_node_name]
        action: replace
        targetLabel: node
      - targetLabel: label_truefoundry_com_application_id
        sourceLabels:
          - __meta_kubernetes_pod_label_truefoundry_com_application_id
    ## @param scrapeConfigs.kubernetesPods.metricsRelabelings [array] Metrics relabelings for kubernetes pods
    metricsRelabelings:
      - regex: ALERTS|istio_requests_total|istio_request_duration_milliseconds_bucket|nats_stream_total_messages|envoy_http_inbound_.*_downstream_rq_total|tfy_async_processor_.*|envoy_http_downstream_rq_total
        action: keep
        sourceLabels:
          - __name__
  ## @param scrapeConfigs.additionalScrapeConfigs [array] Additional scrape configs for prometheus
  additionalScrapeConfigs: []
## @section alertManagers Alert managers for prometheus
alertManagers:
  # alertManagers.tfyAgent Alert manager for tfy-agent
  tfyAgent:
    ## @param alertManagers.tfyAgent.enabled Enable alert manager for tfy-agent
    enabled: true
    ## @param alertManagers.tfyAgent.name Name of the alert manager
    name: tfy-alertmanager-config
    ## @param alertManagers.tfyAgent.route [object] Route for the alert manager
    route:
      receiver: tfy-agent
      routes:
        - receiver: tfy-agent
          continue: true
          matchers:
            - name: severity
              matchType: '=~'
              value: "warning|critical"
          repeatInterval: 1h
    ## @param alertManagers.tfyAgent.receivers [array] Receivers for the alert manager
    receivers:
      - name: tfy-agent
        webhookConfigs:
          - sendResolved: true
            url: http://tfy-agent.tfy-agent.svc.cluster.local:3000/alerts
## @section prometheusRules Prometheus rules for prometheus
prometheusRules:
  # prometheusRules.alerts Prometheus rules for alerts
  containerRules:
    ## @param prometheusRules.containerRules.enabled Enable prometheus rules for alerts
    enabled: true
    ## @param prometheusRules.containerRules.name Name of the prometheus rules
    name: tfy-alertmanager-config-alerting-rules
    ## @param prometheusRules.containerRules.labels [object] Labels for the prometheus rules
    labels: {}
    ## @param prometheusRules.containerRules.annotations [object] Annotations for the prometheus rules
    annotations: {}
  # prometheusRules.kubecostRules Prometheus rules for kubecost
  kubecostRules:
    ## @param prometheusRules.kubecostRules.enabled Enable prometheus rules for kubecost
    enabled: true
    ## @param prometheusRules.kubecostRules.name Name of the prometheus rules
    name: tfy-alertmanager-config-kubecost-rules
    ## @param prometheusRules.kubecostRules.labels [object] Labels for the prometheus rules
    labels: {}
    ## @param prometheusRules.kubecostRules.annotations [object] Annotations for the prometheus rules
    annotations: {}
  # prometheusRules.envoyPortRules Prometheus rules for alerts
  envoyPortRules:
    ## @param prometheusRules.envoyPortRules.enabled Enable prometheus rules for alerts
    enabled: true
    ## @param prometheusRules.envoyPortRules.name Name of the prometheus rules
    name: tfy-envoy-port-rules
    ## @param prometheusRules.envoyPortRules.labels [object] Labels for the prometheus rules
    labels: {}
    ## @param prometheusRules.envoyPortRules.annotations [object] Annotations for the prometheus rules
    annotations: {}
    ## @param prometheusRules.envoyPortRules.portList [array] List of common ports
    portList: ["80", "443", "3000", "5000", "5005", "8000", "8008", "8080", "8443", "6000", "9000", "9090", "10000"]
## @section controlPlaneMonitors service monitors for control plane components
controlPlaneMonitors:
  ## @param controlPlaneMonitors.enabled Enable service monitors for control plane components
  enabled: false
  ## @param controlPlaneMonitors.releaseNamespace Release namespace for the control plane
  releaseNamespace: truefoundry
  ## @param controlPlaneMonitors.tenantName Tenant name for the control plane
  tenantName: "<to_be_provided>"
  ## @param controlPlaneMonitors.namespaceSelector [object] Namespace selector for the control plane monitors
  namespaceSelector:
    matchNames:
      - truefoundry
  ## @param controlPlaneMonitors.serviceSelectorLabel Service selector label for the control plane monitors
  serviceSelectorLabel: app.kubernetes.io/name
  # controlPlaneMonitors.alerts Alert configuration for control plane
  alerts:
    ## @param controlPlaneMonitors.alerts.enabled Enable alerts for control plane
    enabled: true
    # controlPlaneMonitors.alerts.alertRules Alert rules configuration
    alertRules:
      ## @param controlPlaneMonitors.alerts.alertRules.labels [object] Labels for control plane alert rules
      labels: {}
      ## @param controlPlaneMonitors.alerts.alertRules.annotations [object] Annotations for control plane alert rules
      annotations: {}
      ## @param controlPlaneMonitors.alerts.alertRules.enabled Enable alert rules for control plane
      enabled: true
      ## @param controlPlaneMonitors.alerts.alertRules.name Name of the alert rules
      name: tfy-control-plane-alerting-rules
    # controlPlaneMonitors.alerts.alertManager Alert manager configuration
    alertManager:
      ## @param controlPlaneMonitors.alerts.alertManager.enabled Enable alert manager for control plane
      enabled: true
      ## @param controlPlaneMonitors.alerts.alertManager.labels [object] Labels for control plane alert manager
      labels: {}
      ## @param controlPlaneMonitors.alerts.alertManager.annotations [object] Annotations for control plane alert manager
      annotations: {}
      ## @param controlPlaneMonitors.alerts.alertManager.name Name of the alert manager
      name: tfy-control-plane-alert-manager
      ## controlPlaneMonitors.alerts.alertManager.secret Secret for the alert manager
      secret:
        ## @param controlPlaneMonitors.alerts.alertManager.secret.create Create a secret for the alert manager
        create: false
        ## @param controlPlaneMonitors.alerts.alertManager.secret.name Name of the secret for the alert manager
        name: tfy-control-plane-alert-manager-secret
        ## @param controlPlaneMonitors.alerts.alertManager.secret.data [object] Data for the secret for the alert manager
        data: {}
        # API_URL: <url>
        # BOT_TOKEN: <token>
      ## @param controlPlaneMonitors.alerts.alertManager.route [object] Route for the alert manager
      route:
        routes:
          - receiver: tfy-control-plane-alerts-receiver
            continue: true
            matchers:
              - name: severity
                matchType: '=~'
                value: "warning|critical"
              - name: controlplane
                matchType: '='
                value: "true"
            repeatInterval: 15m
      ## @param controlPlaneMonitors.alerts.alertManager.receivers [array] Receivers for the alert manager
      receivers:
        - name: tfy-control-plane-alerts-receiver
          slackConfigs:
            - channel: "#alerts"
              iconEmoji: ":alert:"
              apiURL:
                key: "API_URL"
                name: tfy-control-plane-alert-manager-secret
              sendResolved: true
              text: >-
                {{ range .Alerts }} 

                {{ if eq .Status "firing" }}:warning:{{ else
                }}:white_check_mark:{{ end }} *Alert:* {{ .Annotations.summary
                }} 

                *Severity:* `{{ .Labels.severity }}` 

                *Description:* {{ .Annotations.description }} 

                *Details:* 

                {{ range.Labels.SortedPairs }}
                • *{{ .Name }}:* `{{ .Value }}`
                {{ end }}

                {{ end }}
              title: >-
                {{ if eq .Status "firing" }} FIRING ({{ .Alerts.Firing | len
                }}){{ else }} RESOLVED ({{ .Alerts.Resolved | len }}){{ end }}
                Control Plane Alerts
                  # Slack configuration for alerts using Bot token
        # slackConfigs:
        #   - channel: "#alerts"
        #     iconEmoji: ":alert:"
        #     apiURL: 
        #       key: "API_URL"
        #       name: tfy-control-plane-alert-manager-secret
        #     sendResolved: true
        #     httpConfig:
        #       authorization:
        #         credentials:
        #           key: "BOT_TOKEN"
        #           name: tfy-control-plane-alert-manager-secret

  # controlPlaneMonitors.clickHouseOperator Service monitor for ClickHouse operator
  clickHouseOperator:
    ## @param controlPlaneMonitors.clickHouseOperator.enabled Enable service monitor for ClickHouse operator
    enabled: true
    ## @param controlPlaneMonitors.clickHouseOperator.name Name of the service monitor
    name: tfy-clickhouse-operator
    ## @param controlPlaneMonitors.clickHouseOperator.labels [object] Labels for ClickHouse operator
    labels: {}
    ## @param controlPlaneMonitors.clickHouseOperator.annotations [object] Annotations for ClickHouse operator
    annotations: {}
    ## @param controlPlaneMonitors.clickHouseOperator.jobLabel Job label for ClickHouse operator
    jobLabel: app.kubernetes.io/name
    ## @param controlPlaneMonitors.clickHouseOperator.endpoints [array] Endpoints for ClickHouse operator
    endpoints:
      - path: /metrics
        targetPort: 8888
        honorLabels: true
      - path: /metrics
        targetPort: 9999
        honorLabels: true
    ## @param controlPlaneMonitors.clickHouseOperator.namespaceSelector [object] Namespace selector for ClickHouse operator
    namespaceSelector:
      matchNames:
        - truefoundry
    ## @param controlPlaneMonitors.clickHouseOperator.serviceSelectorLabels [object] Service selector labels for ClickHouse operator
    serviceSelectorLabels:
      app.kubernetes.io/name: altinity-clickhouse-operator
  # controlPlaneMonitors.servicefoundryServer Service monitor for servicefoundry server
  servicefoundryServer:
    ## @param controlPlaneMonitors.servicefoundryServer.enabled Enable service monitor for servicefoundry server
    enabled: true
    ## @param controlPlaneMonitors.servicefoundryServer.name Name of the service monitor
    name: servicefoundry-server
    ## @param controlPlaneMonitors.servicefoundryServer.labels [object] Labels for servicefoundry server
    labels: {}
    ## @param controlPlaneMonitors.servicefoundryServer.annotations [object] Annotations for servicefoundry server
    annotations: {}
    ## @param controlPlaneMonitors.servicefoundryServer.endpoints [array] Endpoints for servicefoundry server
    endpoints:
      - targetPort: 3000
        path: /metrics
        honorLabels: true
    ## @param controlPlaneMonitors.servicefoundryServer.serviceSelectorLabels [object] Service selector labels for servicefoundry server
    serviceSelectorLabels: {}
    ## @param controlPlaneMonitors.servicefoundryServer.namespaceSelector [object] Namespace selector for servicefoundry server
    namespaceSelector:
      matchNames:
        - truefoundry
  # controlPlaneMonitors.mlfoundryServer Service monitor for mlfoundry server
  mlfoundryServer:
    ## @param controlPlaneMonitors.mlfoundryServer.enabled Enable service monitor for mlfoundry server
    enabled: true
    ## @param controlPlaneMonitors.mlfoundryServer.name  Name of the service monitor
    name: mlfoundry-server
    ## @param controlPlaneMonitors.mlfoundryServer.labels [object] Labels for mlfoundry server
    labels: {}
    ## @param controlPlaneMonitors.mlfoundryServer.annotations [object] Annotations for mlfoundry server
    annotations: {}
    ## @param controlPlaneMonitors.mlfoundryServer.endpoints [array] Endpoints for mlfoundry server
    endpoints:
      - targetPort: 5000
        path: /metrics
        honorLabels: true
    ## @param controlPlaneMonitors.mlfoundryServer.serviceSelectorLabels [object] Service selector labels for mlfoundry server
    serviceSelectorLabels: {}
    ## @param controlPlaneMonitors.mlfoundryServer.namespaceSelector [object] Namespace selector for mlfoundry server
    namespaceSelector:
      matchNames:
        - truefoundry
  # controlPlaneMonitors.sfyManifestService Service monitor for sfy manifest service
  sfyManifestService:
    ## @param controlPlaneMonitors.sfyManifestService.enabled Enable service monitor for sfy manifest service
    enabled: true
    ## @param controlPlaneMonitors.sfyManifestService.name Name of the service monitor
    name: sfy-manifest-service
    ## @param controlPlaneMonitors.sfyManifestService.labels [object] Labels for sfy manifest service
    labels: {}
    ## @param controlPlaneMonitors.sfyManifestService.annotations [object] Annotations for sfy manifest service
    annotations: {}
    ## @param controlPlaneMonitors.sfyManifestService.endpoints [array] Endpoints for sfy manifest service
    endpoints:
      - targetPort: 8080
        path: /metrics
        honorLabels: true
    ## @param controlPlaneMonitors.sfyManifestService.serviceSelectorLabels [object] Service selector labels for sfy manifest service
    serviceSelectorLabels: {}
    ## @param controlPlaneMonitors.sfyManifestService.namespaceSelector [object] Namespace selector for sfy manifest service
    namespaceSelector:
      matchNames:
        - truefoundry
  # controlPlaneMonitors.tfyController Service monitor for tfy-controller
  tfyController:
    ## @param controlPlaneMonitors.tfyController.enabled Enable service monitor for tfy-controller
    enabled: true
    ## @param controlPlaneMonitors.tfyController.name Name of the service monitor
    name: tfy-controller
    ## @param controlPlaneMonitors.tfyController.labels [object] Labels for tfy-controller
    labels: {}
    ## @param controlPlaneMonitors.tfyController.annotations [object] Annotations for tfy-controller
    annotations: {}
    ## @param controlPlaneMonitors.tfyController.endpoints [array] Endpoints for tfy-controller
    endpoints:
      - path: /metrics
        targetPort: 8123
        honorLabels: true
    ## @param controlPlaneMonitors.tfyController.serviceSelectorLabels [object] Service selector labels for tfy-controller
    serviceSelectorLabels: {}
    ## @param controlPlaneMonitors.tfyController.namespaceSelector [object] Namespace selector for tfy-controller
    namespaceSelector:
      matchNames:
        - truefoundry
  # controlPlaneMonitors.tfyK8sController Service monitor for tfy-k8s-controller
  tfyK8sController:
    ## @param controlPlaneMonitors.tfyK8sController.enabled Enable service monitor for tfy-k8s-controller
    enabled: true
    ## @param controlPlaneMonitors.tfyK8sController.name Name of the service monitor
    name: tfy-k8s-controller
    ## @param controlPlaneMonitors.tfyK8sController.labels [object] Labels for tfy-k8s-controller
    labels: {}
    ## @param controlPlaneMonitors.tfyK8sController.annotations [object] Annotations for tfy-k8s-controller
    annotations: {}
    ## @param controlPlaneMonitors.tfyK8sController.jobLabel Job label for tfy-k8s-controller
    jobLabel: app.kubernetes.io/name
    ## @param controlPlaneMonitors.tfyK8sController.endpoints [array] Endpoints for tfy-k8s-controller
    endpoints:
      - path: /metrics
        targetPort: 3002
        honorLabels: true
    ## @param controlPlaneMonitors.tfyK8sController.serviceSelectorLabels [object] Service selector labels for tfy-k8s-controller
    serviceSelectorLabels: {}
    ## @param controlPlaneMonitors.tfyK8sController.namespaceSelector [object] Namespace selector for tfy-k8s-controller
    namespaceSelector:
      matchNames:
        - truefoundry
  # controlPlaneMonitors.tfyOtelCollector Service monitor for tfy-otel-collector
  tfyOtelCollector:
    ## @param controlPlaneMonitors.tfyOtelCollector.enabled Enable service monitor for tfy-otel-collector
    enabled: true
    ## @param controlPlaneMonitors.tfyOtelCollector.name Name of the service monitor
    name: tfy-otel-collector
    ## @param controlPlaneMonitors.tfyOtelCollector.labels [object] Labels for otel collector
    labels: {}
    ## @param controlPlaneMonitors.tfyOtelCollector.annotations [object] Annotations for otel collector
    annotations: {}
    ## @param controlPlaneMonitors.tfyOtelCollector.endpoints [array] Endpoints for otel collector
    endpoints:
      - honorLabels: true
        path: /metrics
        targetPort: 8888
    ## @param controlPlaneMonitors.tfyOtelCollector.namespaceSelector [object] Namespace selector for otel collector
    namespaceSelector:
      matchNames:
        - truefoundry
    ## @param controlPlaneMonitors.tfyOtelCollector.serviceSelectorLabels [object] Service selector labels for otel collector
    serviceSelectorLabels: {}
  # controlPlaneMonitors.llmGateway Service monitor for llm gateway
  llmGateway:
    ## @param controlPlaneMonitors.llmGateway.enabled Enable service monitor for llm gateway
    enabled: true
    ## @param controlPlaneMonitors.llmGateway.name Name of the service monitor
    name: tfy-llm-gateway
    ## @param controlPlaneMonitors.llmGateway.labels [object] Labels for llm gateway
    labels: {}
    ## @param controlPlaneMonitors.llmGateway.annotations [object] Annotations for llm gateway
    annotations: {}
    ## @param controlPlaneMonitors.llmGateway.endpoints [array] Endpoints for llm gateway
    endpoints:
      - path: /metrics
        targetPort: 8787
        honorLabels: true
    ## @param controlPlaneMonitors.llmGateway.namespaceSelector [object] Namespace selector for llm gateway
    namespaceSelector:
      matchNames:
        - truefoundry
    ## @param controlPlaneMonitors.llmGateway.serviceSelectorLabels [object] Service selector labels for llm gateway
    serviceSelectorLabels: {}
  # controlPlaneMonitors.nats Service monitor for nats
  nats:
    ## @param controlPlaneMonitors.nats.enabled Enable service monitor for nats
    enabled: true
    ## @param controlPlaneMonitors.nats.name Name of the service monitor
    name: truefoundry-tfy-nats
    ## @param controlPlaneMonitors.nats.labels [object] Labels for nats
    labels: {}
    ## @param controlPlaneMonitors.nats.annotations [object] Annotations for nats
    annotations: {}
    ## @param controlPlaneMonitors.nats.podMetricsEndpoints [array] Pod metrics endpoints for nats
    podMetricsEndpoints:
      - targetPort: 7777
        honorLabels: true
    ## @param controlPlaneMonitors.nats.podSelectorLabels [object] Pod selector labels for nats
    podSelectorLabels:
      app.kubernetes.io/component: nats
    ## @param controlPlaneMonitors.nats.namespaceSelector [object] Namespace selector for nats
    namespaceSelector:
      matchNames:
        - truefoundry

## @section serviceMonitors Service monitors for prometheus
serviceMonitors:
  ## @param serviceMonitors.enabled Enable service monitors for prometheus
  enabled: true
  # serviceMonitors.alertManager Service monitor for alert manager
  alertManager:
    ## @param serviceMonitors.alertManager.enabled Enable service monitor for alert manager
    enabled: true
    ## @param serviceMonitors.alertManager.name Name of the service monitor
    name: prometheus-kube-prometheus-alertmanager
    ## @param serviceMonitors.alertManager.labels [object] Labels for alert manager
    labels: {}
    ## @param serviceMonitors.alertManager.annotations [object] Annotations for alert manager
    annotations: {}
    ## @param serviceMonitors.alertManager.endpoints [array] Endpoints for alert manager
    endpoints:
      - enableHttp2: true
        path: /metrics
        port: http-web
        metricRelabelings:
          - regex: alertmanager_config_last_reload_successful|alertmanager_cluster_members|alertmanager_notifications_failed_total|alertmanager_notifications_total|alertmanager_config_hash|up|process_start_time_seconds
            action: keep
            sourceLabels:
              - __name__
      - path: /metrics
        port: reloader-web
        metricRelabelings:
          - regex: alertmanager_config_last_reload_successful|alertmanager_cluster_members|alertmanager_notifications_failed_total|alertmanager_notifications_total|alertmanager_config_hash|up|process_start_time_seconds
            action: keep
            sourceLabels:
              - __name__
    ## @param serviceMonitors.alertManager.serviceSelectorLabels [object] Service selector labels for alert manager
    serviceSelectorLabels:
      app: kube-prometheus-stack-alertmanager
      app.kubernetes.io/instance: prometheus
    ## @param serviceMonitors.alertManager.namespaceSelector [object] Namespace selector for alert manager
    namespaceSelector:
      matchNames:
        - prometheus
  # serviceMonitors.workflows Service monitor for workflows
  workflows:
    ## @param serviceMonitors.workflows.enabled Enable service monitor for workflows
    enabled: true
    ## @param serviceMonitors.workflows.name Name of the service monitor
    name: argo-workflows
    ## @param serviceMonitors.workflows.annotations [object] Annotations for workflows
    annotations: {}
    ## @param serviceMonitors.workflows.labels [object] Labels for workflows
    labels: {}
    ## @param serviceMonitors.workflows.jobLabel Job label for workflows
    jobLabel: app.kubernetes.io/instance
    ## @param serviceMonitors.workflows.endpoints [array] Endpoints for workflows
    endpoints:
      - port: metrics
        scheme: http
        interval: 30s
        path: /metrics
    ## @param serviceMonitors.workflows.serviceSelectorLabels [object] Service selector labels for workflows
    serviceSelectorLabels:
      app.kubernetes.io/instance: argo-workflows
    ## @param serviceMonitors.workflows.namespaceSelector [object] Namespace selector for workflows
    namespaceSelector:
      matchNames:
        - argo-workflows
  # serviceMonitors.keda Service monitor for keda
  keda:
    ## @param serviceMonitors.keda.enabled Enable service monitor for keda
    enabled: true
    ## @param serviceMonitors.keda.name Name of the service monitor
    name: keda
    ## @param serviceMonitors.keda.labels [object] Labels for keda
    labels: {}
    ## @param serviceMonitors.keda.annotations [object] Annotations for keda
    annotations: {}
    ## @param serviceMonitors.keda.jobLabel Job label for keda
    jobLabel: app.kubernetes.io/instance
    ## @param serviceMonitors.keda.endpoints [array] Endpoints for keda
    endpoints:
      - port: metrics
        interval: 10s
        scrapeTimeout: 10s
        scheme: http
        path: /metrics
        honorLabels: true
        metricRelabelings:
          - sourceLabels: [__name__]
            regex: '(keda_metrics_(.+)|workqueue_(.+)|go_(.+)|controller_(.+)|process_(.+))'
            action: drop
          - sourceLabels: [__name__]
            regex: '(keda_build_info|keda_resource_totals|keda_internal_scale_loop_latency|keda_trigger_totals|keda_scaled_object_errors|keda_scaler_metrics_latency|keda_scaler_errors|keda_scaler_errors_total|keda_scaled_object_errors|keda_scaler_active)'
            action: drop
    ## @param serviceMonitors.keda.serviceSelectorLabels [object] Service selector labels for keda
    serviceSelectorLabels:
      app.kubernetes.io/name: keda-operator
    ## @param serviceMonitors.keda.namespaceSelector [object] Namespace selector for keda
    namespaceSelector:
      matchNames:
        - keda
  # serviceMonitors.argoCD Service monitor for ssh server
  sshServer:
    ## @param serviceMonitors.sshServer.enabled Enable service monitor for ssh server
    enabled: true
    ## @param serviceMonitors.sshServer.name Name of the service monitor
    name: ssh
    ## @param serviceMonitors.sshServer.labels [object] Labels for ssh server
    labels: {}
    ## @param serviceMonitors.sshServer.jobLabel Job label for ssh server
    jobLabel: truefoundry.com/component-type
    ## @param serviceMonitors.sshServer.endpoints [array] Endpoints for ssh server
    endpoints:
      - port: http-activity-monitor
        scheme: http
        interval: 3s
        path: /metrics
        relabelings:
          - action: replace
            replacement: ssh-server-metrics
            targetLabel: job
    ## @param serviceMonitors.sshServer.serviceSelectorLabels [object] Service selector labels for ssh server
    serviceSelectorLabels:
      truefoundry.com/component-type: ssh-server
    ## @param serviceMonitors.sshServer.namespaceSelector [object] Namespace selector for ssh server
    namespaceSelector:
      any: true
  # serviceMonitors.gpu Service monitor for gpu
  gpu:
    ## @param serviceMonitors.gpu.labels [object] Labels for gpu
    labels: {}
    ## @param serviceMonitors.gpu.annotations [object] Annotations for gpu
    annotations: {}
    ## @param serviceMonitors.gpu.operator.enabled Enable service monitor for gpu
    operator:
      ## @param serviceMonitors.gpu.operator.enabled Enable service monitor for gpu
      enabled: false
      ## @param serviceMonitors.gpu.operator.name Name of the service monitor
      name: gpu-operator
      ## @param serviceMonitors.gpu.operator.jobLabel Job label for gpu
      jobLabel: app
      ## @param serviceMonitors.gpu.operator.endpoints [array] Endpoints for gpu
      endpoints:
        - port: gpu-operator-metrics
          path: /metrics
          interval: 15s
          scrapeTimeout: 10s
          scheme: http
      ## @param serviceMonitors.gpu.operator.serviceSelectorLabels [object] Service selector labels for gpu
      serviceSelectorLabels:
        app: gpu-operator
      ## @param serviceMonitors.gpu.operator.namespaceSelector [object] Namespace selector for gpu
      namespaceSelector:
        matchNames:
          - tfy-gpu-operator
    dcgmExporter:
      ## @param serviceMonitors.gpu.dcgmExporter.enabled Enable service monitor for dcgm exporter
      enabled: true
      ## @param serviceMonitors.gpu.dcgmExporter.name Name of the service monitor
      name: nvidia-dcgm-exporter
      ## @param serviceMonitors.gpu.dcgmExporter.jobLabel Job label for dcgm exporter
      jobLabel: app
      ## @param serviceMonitors.gpu.dcgmExporter.endpoints [array] Endpoints for dcgm exporter
      endpoints:
        - port: gpu-metrics
          path: /metrics
          interval: 15s
          scrapeTimeout: 10s
          honorLabels: true
          scheme: http
          relabelings:
            - action: replace
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
            - action: replace
              replacement: gpu-metrics
              targetLabel: job
      ## @param serviceMonitors.gpu.dcgmExporter.serviceSelectorLabels [object] Service selector labels for dcgm exporter
      serviceSelectorLabels:
        app: nvidia-dcgm-exporter
      ## @param serviceMonitors.gpu.dcgmExporter.namespaceSelector [object] Namespace selector for dcgm exporter
      namespaceSelector:
        matchNames:
          - tfy-gpu-operator
  # serviceMonitors.karpenter Service monitor for karpenter
  karpenter:
    ## @param serviceMonitors.karpenter.enabled Enable service monitor for karpenter
    enabled: false
    ## @param serviceMonitors.karpenter.name Name of the service monitor
    name: karpenter
    ## @param serviceMonitors.karpenter.namespace Namespace for karpenter
    namespace: kube-system
    ## @param serviceMonitors.karpenter.labels [object] Labels for karpenter
    labels: {}
    ## @param serviceMonitors.karpenter.annotations [object] Annotations for karpenter
    annotations: {}
    ## @param serviceMonitors.karpenter.namespaceSelector [object] Namespace selector for karpenter
    namespaceSelector:
      matchNames:
        - kube-system
    ## @param serviceMonitors.karpenter.endpoints [array] Endpoints for karpenter
    endpoints:
      - port: http-metrics
        path: /metrics
    ## @param serviceMonitors.karpenter.serviceSelectorLabels [object] Service selector labels for karpenter
    serviceSelectorLabels:
      app.kubernetes.io/instance: karpenter
      app.kubernetes.io/name: karpenter
  # serviceMonitors.kubecost Service monitor for kubecost
  kubecost:
    ## @param serviceMonitors.kubecost.enabled Enable service monitor for kubecost
    enabled: true
    ## @param serviceMonitors.kubecost.name Name of the service monitor
    name: kubecost
    ## @param serviceMonitors.kubecost.labels [object] Labels for kubecost
    labels: {}
    ## @param serviceMonitors.kubecost.annotations [object] Annotations for kubecost
    annotations: {}
    ## @param serviceMonitors.kubecost.jobLabel Job label for kubecost
    jobLabel: app.kubernetes.io/instance
    ## @param serviceMonitors.kubecost.endpoints [array] Endpoints for kubecost
    endpoints:
      - port: tcp-model
        interval: 1m
        scrapeTimeout: 60s
        path: /metrics
        honorLabels: true
        metricRelabelings:
          - regex: container_fs_limit_bytes|container_fs_usage_bytes|kube_namespace_annotations|kube_pod_annotations|kube_pod_owner|kube_pod_container_resource_requests|kubecost_load_balancer_cost|kube_persistentvolume_capacity_bytes|kube_node_status_capacity_memory_bytes|node_total_hourly_cost|kube_node_labels|kubecost_pv_info|pv_hourly_cost|node_ram_hourly_cost|node_gpu_hourly_cost|node_cpu_hourly_cost|kubecost_node_is_spot|kube_persistentvolumeclaim_info|kube_node_status_allocatable_cpu_cores|node_gpu_count|kube_node_status_capacity_cpu_cores|kube_node_status_allocatable_memory_bytes|kube_pod_container_status_running|kubecost_cluster_management_cost|kubecost_container_cpu_usage_irate|kubecost_network_zone_egress_cost|kubecost_network_region_egress_cost|kubecost_network_internet_egress_cost|pod_pvc_allocation|kube_persistentvolumeclaim_resource_requests_storage_bytes|kube_namespace_labels|container_memory_allocation_bytes|container_cpu_allocation|container_gpu_allocation|kube_pod_labels|statefulSet_match_labels|service_selector_labels|deployment_match_labels|kubecost_cluster_info|kube_node_status_allocatable|kube_node_status_capacity
            action: keep
            sourceLabels:
              - __name__
    ## @param serviceMonitors.kubecost.serviceSelectorLabels [object] Service selector labels for kubecost
    serviceSelectorLabels:
      app: cost-analyzer
    ## @param serviceMonitors.kubecost.namespaceSelector [object] Namespace selector for kubecost
    namespaceSelector:
      matchNames:
        - kubecost
  # serviceMonitors.kubelet Service monitor for kubelet
  kubelet:
    ## @param serviceMonitors.kubelet.enabled Enable service monitor for kubelet
    enabled: true
    ## @param serviceMonitors.kubelet.name Name of the service monitor
    name: prometheus-kube-prometheus-kubelet
    ## @param serviceMonitors.kubelet.labels [object] Labels for kubelet
    labels: {}
    ## @param serviceMonitors.kubelet.annotations [object] Annotations for kubelet
    annotations: {}
    ## @param serviceMonitors.kubelet.jobLabel Job label for kubelet
    jobLabel: k8s-app
    ## @param serviceMonitors.kubelet.endpoints [array] Endpoints for kubelet
    endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        honorLabels: true
        honorTimestamps: true
        metricRelabelings:
          - action: labeldrop
            regex: name
          - action: labeldrop
            regex: metrics_path
          - action: labeldrop
            regex: endpoint
          - action: labeldrop
            regex: instance
          - action: keep
            regex: (container_(.+)|kubelet_volume_(.+))
            sourceLabels:
              - __name__
          - regex: ALERTS|container_memory_working_set_bytes|container_fs_reads_bytes_total|container_fs_writes_bytes_total|container_memory_cache|container_cpu_usage_seconds_total|container_cpu_cfs_throttled_periods_total|container_cpu_cfs_periods_total|container_oom_events_total|kubelet_volume_stats_used_bytes|kubelet_volume_stats_capacity_bytes|kubelet_pleg_relist_duration_seconds_bucket|kubelet_node_name|container_memory_swap|kubelet_volume_stats_available_bytes|kubelet_volume_stats_inodes_free|kubelet_volume_stats_inodes|kubelet_volume_stats_inodes_used|kubelet_pod_worker_duration_seconds_bucket|up|container_memory_rss|container_network_transmit_bytes_total|container_network_receive_bytes_total|container_cpu_cfs_throttled_seconds_total
            action: keep
            sourceLabels:
              - __name__
        port: https-metrics
        relabelings:
          - action: replace
            sourceLabels:
              - __metrics_path__
            targetLabel: metrics_path
        scheme: https
        tlsConfig:
          caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecureSkipVerify: true
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        honorLabels: true
        honorTimestamps: true
        interval: 10s
        metricRelabelings:
          - action: drop
            regex: container_blkio_device_usage_total
            sourceLabels:
              - __name__
          - action: drop
            regex: container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)
            sourceLabels:
              - __name__
          - action: drop
            regex: container_memory_(mapped_file|swap)
            sourceLabels:
              - __name__
          - action: drop
            regex: container_(file_descriptors|tasks_state|threads_max)
            sourceLabels:
              - __name__
          - action: drop
            regex: container_spec_(cpu_shares|memory_reservation_limit_bytes|memory_swap_limit_bytes)
            sourceLabels:
              - __name__
          - action: drop
            regex: .+;
            sourceLabels:
              - id
              - pod
          - action: labeldrop
            regex: id
          - action: labeldrop
            regex: name
          - action: labeldrop
            regex: metrics_path
          - action: labeldrop
            regex: endpoint
          - action: labeldrop
            regex: instance
        path: /metrics/cadvisor
        port: https-metrics
        relabelings:
          - action: replace
            sourceLabels:
              - __metrics_path__
            targetLabel: metrics_path
        scheme: https
        tlsConfig:
          caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecureSkipVerify: true
        trackTimestampsStaleness: true
    ## @param serviceMonitors.kubelet.serviceSelectorLabels [object] Service selector labels for kubelet
    serviceSelectorLabels:
      app.kubernetes.io/name: kubelet
      k8s-app: kubelet
    ## @param serviceMonitors.kubelet.namespaceSelector [object] Namespace selector for kubelet
    namespaceSelector:
      matchNames:
        - kube-system
  # serviceMonitors.nodeExporter Service monitor for node exporter
  nodeExporter:
    ## @param serviceMonitors.nodeExporter.enabled Enable service monitor for node exporter
    enabled: true
    ## @param serviceMonitors.nodeExporter.name Name of the service monitor
    name: prometheus-prometheus-node-exporter
    ## @param serviceMonitors.nodeExporter.labels [object] Labels for node exporter
    labels: {}
    ## @param serviceMonitors.nodeExporter.annotations [object] Annotations for node exporter
    annotations: {}
    ## @param serviceMonitors.nodeExporter.jobLabel Job label for node exporter
    jobLabel: jobLabel
    ## @param serviceMonitors.nodeExporter.endpoints [array] Endpoints for node exporter
    endpoints:
      - interval: 30s
        port: http-metrics
        relabelings:
          - action: replace
            regex: (.+)
            sourceLabels:
              - __meta_kubernetes_endpoint_node_name
            targetLabel: node
        scheme: http
        metricRelabelings:
          - regex: node_time_seconds|node_boot_time_seconds|up|node_cpu_seconds_total|node_load1|instance:node_num_cpu:sum|node_memory_MemAvailable_bytes|node_memory_Buffers_bytes|node_memory_Cached_bytes|node_memory_MemFree_bytes|node_memory_Slab_bytes|node_memory_MemTotal_bytes|node_vmstat_pgmajfault|node_disk_io_time_seconds_total|node_disk_io_time_weighted_seconds_total|node_network_receive_bytes_total|node_network_transmit_bytes_total|node_network_receive_drop_total|node_network_transmit_drop_total|node_filesystem_avail_bytes|node_filesystem_size_bytes|node_filesystem_readonly|node_filesystem_files_free|node_filesystem_files|node_network_receive_errs_total|node_network_receive_packets_total|node_network_transmit_errs_total|node_network_transmit_packets_total|node_nf_conntrack_entries|node_textfile_scrape_error|node_timex_offset_seconds|node_timex_sync_status|node_timex_maxerror_seconds|node_md_disks_required|node_md_disks|node_filefd_allocated|node_filefd_maximum|node_systemd_unit_state|node_network_up
            action: keep
            sourceLabels:
              - __name__
    ## @param serviceMonitors.nodeExporter.serviceSelectorLabels [object] Service selector labels for node exporter
    serviceSelectorLabels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus-node-exporter
    ## @param serviceMonitors.nodeExporter.namespaceSelector [object] Namespace selector for node exporter
    namespaceSelector:
      matchNames:
        - prometheus
  # serviceMonitors.kubeStateMetrics Service monitor for kube state metrics
  kubeStateMetrics:
    ## @param serviceMonitors.kubeStateMetrics.enabled Enable service monitor for kube state metrics
    enabled: true
    ## @param serviceMonitors.kubeStateMetrics.name Name of the service monitor
    name: prometheus-kube-state-metrics
    ## @param serviceMonitors.kubeStateMetrics.labels [object] Labels for kube state metrics
    labels: {}
    ## @param serviceMonitors.kubeStateMetrics.annotations [object] Annotations for kube state metrics
    annotations: {}
    ## @param serviceMonitors.kubeStateMetrics.jobLabel Job label for kube state metrics
    jobLabel: app.kubernetes.io/name
    ## @param serviceMonitors.kubeStateMetrics.endpoints [array] Endpoints for kube state metrics
    endpoints:
      - honorLabels: true
        metricRelabelings:
          - action: replace
            regex: ([;]*)([a-z-_A-Z]+)([;]*)
            replacement: ${2}
            separator: ;
            sourceLabels:
              - label_karpenter_sh_capacity_type
              - label_eks_amazonaws_com_capacity_type
              - label_kubernetes_azure_com_scalesetpriority
              - label_cloud_google_com_gke_provisioning
            targetLabel: capacity_type
          - action: lowercase
            regex: (.+)
            sourceLabels:
              - capacity_type
            targetLabel: capacity_type
          - action: replace
            regex: (.+)
            sourceLabels:
              - label_node_kubernetes_io_instance_type
            targetLabel: instance_type
          - action: keep
            regex: ALERTS|kube_pod_container_resource_requests|kube_pod_status_phase|kube_node_status_capacity|kube_pod_status_ready|kube_pod_labels|kube_node_labels|kube_pod_container_resource_limits|kube_pod_container_status_restarts_total|kube_node_status_condition|kube_pod_owner|kube_replicaset_owner|kube_node_status_allocatable|kube_resourcequota|kube_pod_info|kube_pod_container_status_waiting_reason|kube_deployment_status_observed_generation|kube_deployment_metadata_generation|kube_deployment_spec_replicas|kube_deployment_status_replicas_available|kube_deployment_status_replicas_updated|kube_deployment_status_condition|kube_statefulset_status_replicas_ready|kube_statefulset_status_replicas|kube_statefulset_status_replicas_updated|kube_statefulset_status_observed_generation|kube_statefulset_metadata_generation|kube_statefulset_status_current_revision|kube_statefulset_status_update_revision|kube_statefulset_replicas|kube_daemonset_status_current_number_scheduled|kube_daemonset_status_desired_number_scheduled|kube_daemonset_status_number_misscheduled|kube_daemonset_status_updated_number_scheduled|kube_daemonset_status_number_available|kube_job_status_start_time|kube_job_status_active|kube_job_failed|kube_horizontalpodautoscaler_status_desired_replicas|kube_horizontalpodautoscaler_status_current_replicas|kube_horizontalpodautoscaler_spec_min_replicas|kube_horizontalpodautoscaler_spec_max_replicas|kube_persistentvolume_status_phase|kube_node_spec_taint|kube_state_metrics_list_total|kube_state_metrics_watch_total|kube_state_metrics_total_shards|kube_state_metrics_shard_ordinal|kube_pod_container_state_started|kube_pod_status_container_ready_time|kube_pod_container_status_last_terminated_reason|kube_pod_container_status_ready|kube_pod_container_info
            sourceLabels:
              - __name__
        port: http
    ## @param serviceMonitors.kubeStateMetrics.serviceSelectorLabels [object] Service selector labels for kube state metrics
    serviceSelectorLabels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: kube-state-metrics
  # serviceMonitors.prometheus Service monitor for prometheus
  prometheus:
    ## @param serviceMonitors.prometheus.enabled Enable service monitor for prometheus
    enabled: true
    ## @param serviceMonitors.prometheus.name Name of the service monitor
    name: prometheus
    ## @param serviceMonitors.prometheus.labels [object] Labels for prometheus
    labels: {}
    ## @param serviceMonitors.prometheus.annotations [object] Annotations for prometheus
    annotations: {}
    ## @param serviceMonitors.prometheus.jobLabel Job label for prometheus
    jobLabel: app.kubernetes.io/instance
    ## @param serviceMonitors.prometheus.endpoints [array] Endpoints for prometheus
    endpoints:
      - path: /metrics
        port: http-web
        metricRelabelings:
          - regex: prometheus_config_last_reload_successful|prometheus_tsdb_compaction_chunk_size_bytes_sum|prometheus_tsdb_compaction_chunk_samples_sum|prometheus_sd_refresh_failures_total|prometheus_sd_kubernetes_failures_total|prometheus_notifications_queue_length|prometheus_notifications_queue_capacity|prometheus_notifications_errors_total|prometheus_notifications_sent_total|prometheus_notifications_alertmanagers_discovered|prometheus_tsdb_reloads_failures_total|prometheus_tsdb_compactions_failed_total|prometheus_tsdb_head_samples_appended_total|prometheus_target_metadata_cache_entries|prometheus_rule_group_rules|prometheus_target_scrapes_sample_duplicate_timestamp_total|prometheus_target_scrapes_sample_out_of_order_total|prometheus_remote_storage_failed_samples_total|prometheus_remote_storage_samples_failed_total|prometheus_remote_storage_succeeded_samples_total|prometheus_remote_storage_samples_total|prometheus_engine_query_samples_total|prometheus_engine_queries|prometheus_engine_queries_concurrent_max|prometheus_http_requests_total|prometheus_http_request_duration_seconds_bucket|prometheus_tsdb_head_series|prometheus_remote_storage_highest_timestamp_in_seconds|prometheus_remote_storage_queue_highest_sent_timestamp_seconds|prometheus_remote_storage_shards_desired|prometheus_remote_storage_shards_max|prometheus_rule_evaluation_failures_total|prometheus_rule_group_iterations_missed_total|prometheus_target_scrape_pool_exceeded_target_limit_total|prometheus_target_scrape_pool_exceeded_label_limits_total|prometheus_target_scrapes_exceeded_body_size_limit_total|prometheus_target_scrapes_exceeded_sample_limit_total|prometheus_target_sync_failed_total|prometheus_engine_queries|prometheus_engine_queries_concurrent_max
            action: keep
            sourceLabels:
              - __name__
    ## @param serviceMonitors.prometheus.serviceSelectorLabels [object] Service selector labels for prometheus
    serviceSelectorLabels:
      app.kubernetes.io/instance: prometheus
    ## @param serviceMonitors.prometheus.namespaceSelector [object] Namespace selector for prometheus
    namespaceSelector:
      matchNames:
        - prometheus
  # serviceMonitors.prometheusOperator Service monitor for
  prometheusOperator:
    ## @param serviceMonitors.prometheusOperator.enabled Enable service monitor for prometheus operator
    enabled: true
    ## @param serviceMonitors.prometheusOperator.name Name of the service monitor
    name: prometheus-kube-prometheus-admission
    ## @param serviceMonitors.prometheusOperator.labels [object] Labels for prometheus operator
    labels: {}
    ## @param serviceMonitors.prometheusOperator.annotations [object] Annotations for prometheus operator
    annotations: {}
    ## @param serviceMonitors.prometheusOperator.endpoints [array] Endpoints for prometheus operator
    endpoints:
      - port: https
        scheme: https
        honorLabels: true
        tlsConfig:
          ca:
            secret:
              key: ca
              name: prometheus-kube-prometheus-admission
              optional: false
        metricRelabelings:
          - action: keep
            regex: ALERTS|prometheus_operator_list_operations_failed_total|prometheus_operator_list_operations_total|prometheus_operator_watch_operations_failed_total|prometheus_operator_watch_operations_total|prometheus_operator_syncs|prometheus_operator_reconcile_errors_total|prometheus_operator_reconcile_operations_total|prometheus_operator_status_update_errors_total|prometheus_operator_status_update_operations_total|prometheus_operator_node_address_lookup_errors_total|prometheus_operator_ready|prometheus_operator_managed_resources
            sourceLabels:
              - __name__
    ## @param serviceMonitors.prometheusOperator.serviceSelectorLabels [object] Service selector labels for prometheus operator
    serviceSelectorLabels:
      app.kubernetes.io/name: kube-prometheus-stack-prometheus-operator
      app.kubernetes.io/instance: prometheus
    ## @param serviceMonitors.prometheusOperator.namespaceSelector [object] Namespace selector for prometheus operator
    namespaceSelector:
      matchNames:
        - prometheus
  # serviceMonitors.loki Service monitor for loki
  loki:
    ## @param serviceMonitors.loki.enabled Enable service monitor for loki
    enabled: true
    ## @param serviceMonitors.loki.name Name of the service monitor
    name: loki
    ## @param serviceMonitors.loki.labels [object] Labels for loki
    labels: {}
    ## @param serviceMonitors.loki.annotations [object] Annotations for loki
    annotations: {}
    ## @param serviceMonitors.loki.jobLabel Job label for loki
    jobLabel: app.kubernetes.io/instance
    ## @param serviceMonitors.loki.endpoints [array] Endpoints for loki
    endpoints:
      - port: http-metrics
        interval: 30s
        path: /metrics
        honorLabels: true
    ## @param serviceMonitors.loki.serviceSelectorLabels [object] Service selector labels for loki
    serviceSelectorLabels:
      app.kubernetes.io/name: loki
    ## @param serviceMonitors.loki.namespaceSelector [object] Namespace selector for loki
    namespaceSelector:
      matchNames:
        - loki
    # serviceMonitors.loki.promtail Service monitor for promtail
    promtail:
      ## @param serviceMonitors.loki.promtail.enabled Enable service monitor for promtail
      enabled: true
      ## @param serviceMonitors.loki.promtail.name Name of the service monitor
      name: loki-promtail
      ## @param serviceMonitors.loki.promtail.labels [object] Labels for promtail
      labels: {}
      ## @param serviceMonitors.loki.promtail.annotations [object] Annotations for promtail
      annotations: {}
      ## @param serviceMonitors.loki.promtail.endpoints [array] Endpoints for promtail
      endpoints:
        - port: http-metrics
          interval: 30s
          path: /metrics
          honorLabels: true
      ## @param serviceMonitors.loki.promtail.serviceSelectorLabels [object] Service selector labels for promtail
      serviceSelectorLabels:
        app.kubernetes.io/name: promtail
      ## @param serviceMonitors.loki.promtail.namespaceSelector [object] Namespace selector for promtail
      namespaceSelector:
        matchNames:
          - loki

## @param extraObjects [array] Extra objects for prometheus
extraObjects: []
