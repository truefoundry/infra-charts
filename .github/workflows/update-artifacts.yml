name: Generate Inframold Charts Artifacts Manifest

on:
  push:
    branches:
      - cache-image-details
  pull_request:
    branches:
      - 'main'
    paths:
      - '.github/workflows/update-artifacts.yml'
      - 'charts/tfy-k8s-aws-eks-inframold/**'
      - 'charts/tfy-k8s-azure-aks-inframold/**'
      - 'charts/tfy-k8s-civo-talos-inframold/**'
      - 'charts/tfy-k8s-gcp-gke-standard-inframold/**'
      - 'charts/tfy-k8s-generic-inframold/**'
      - 'scripts/generate-artifacts-manifest/**'
      - 'scripts/upload-artifacts/**'

jobs:
  update-artifacts:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      ARTIFACTORY_USERNAME: ${{ secrets.TRUEFOUNDRY_ARTIFACTORY_PUBLIC_USERNAME }}
      ARTIFACTORY_PASSWORD: ${{ secrets.TRUEFOUNDRY_ARTIFACTORY_PUBLIC_PASSWORD }}
      ARTIFACTORY_REPOSITORY_URL: ${{ vars.TRUEFOUNDRY_ARTIFACTORY_PUBLIC_REPOSITORY }}
      ARTIFACTORY_HELM_REGISTRY_URL: ${{ vars.TRUEFOUNDRY_ARTIFACTORY_PUBLIC_HELM_REGISTRY }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Setup Kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Setup Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.15.1

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ./cache/image_details_cache.json
          key: ${{ runner.os }}-image-cache-${{ hashFiles('charts/tfy-k8s*/Chart.yaml') }}
          restore-keys: |
            ${{ runner.os }}-image-cache-

      - name: Install python dependencies
        run: |
          pip install -r scripts/upload-artifacts/requirements.txt
          pip install -r scripts/generate-artifacts-manifest/requirements.txt

      # Generate artifacts manifest for inframold charts
      - name: Generate Artifacts Manifest for Each Chart
        run: |
          charts_list=("tfy-k8s-aws-eks-inframold" "tfy-k8s-azure-aks-inframold" "tfy-k8s-gcp-gke-standard-inframold" "tfy-k8s-generic-inframold")
          for chart in "${charts_list[@]}";
          do
            version=$(cat charts/$chart/Chart.yaml | grep version | awk '{print $2}')
            python scripts/generate-artifacts-manifest/artifacts_template_generator.py $chart https://truefoundry.github.io/infra-charts/ \
              $version charts/$chart/values-artifact-manifest.yaml charts/$chart/artifacts-manifest.json scripts/generate-artifacts-manifest/extra.json
          done
        env:
          MODE: 'local'

      - name: Save cache
        if: always()
        uses: actions/cache@v3
        with:
          path: ./cache/image_details_cache.json
          key: ${{ runner.os }}-image-cache-${{ hashFiles('charts/tfy-k8s*/Chart.yaml') }}

      # Update the inframold artifacts manifest
      - name: Update Artifacts Manifest
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .
          git diff --cached --quiet || git commit -am "[CI] Update charts artifacts manifest files" --signoff
          if git log -1 --pretty=%B | grep -q "[CI]"; then
            git push
          else
            echo "No changes to commit"
          fi
