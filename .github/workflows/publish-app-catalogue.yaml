name: Publish inframold to S3
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/publish-app-catalogue.yaml'
      - 'scripts/publish-app-catalogue/sync-manifests-to-s3.sh'
      - 'charts/tfy-k8s-aws-eks-inframold/**'
      - 'charts/tfy-k8s-azure-aks-inframold/**'
      - 'charts/tfy-k8s-civo-talos-inframold/**'
      - 'charts/tfy-k8s-gcp-gke-standard-inframold/**'
      - 'charts/tfy-k8s-generic-inframold/**'

env:
  AWS_S3_BUCKET: 'tfy-argo-application-catalogue'
  RELEASES_SERVER_URL: ${{ secrets.RELEASES_SERVER_URL }}
  RELEASES_SERVER_API_KEY: ${{ secrets.RELEASES_SERVER_API_KEY }}
  S3_IAM_ROLE_ARN: ${{ secrets.S3_IAM_ROLE_ARN }}
  TFY_HOST: ${{ secrets.ANALYTICS_SERVER_TFY_HOST }}
  TFY_API_KEY: ${{ secrets.ANALYTICS_SERVER_TFY_API_KEY }}

permissions:
  id-token: write
  contents: read

jobs:
  publish_release_and_sync_to_s3:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/release-updater/requirements.txt

      - name: Run release-updater script
        run: |
          python scripts/release-updater/release-updater.py --url ${{ env.RELEASES_SERVER_URL }} --api-key ${{ env.RELEASES_SERVER_API_KEY }}

      - name: Run trigger-vul-scan script
        run: |
          curl -v "${TFY_HOST}/api/svc/v1/jobs/trigger" \
            -H "Authorization: Bearer ${TFY_API_KEY}" \
            -H 'content-type: application/json' \
            --data-raw '{"applicationId":"cmclxkvga4kqj01teeq5l3vre","componentName":"inframold-vulnerability-scanner","input":{"command":"python main.py --inframold_chart_name _all"}}'


      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.S3_IAM_ROLE_ARN }}
          aws-region: 'eu-west-1'

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.9.2

      - name: Set up Python 3.10 (needed for cookiecutter cli)
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - run: |
          echo "Installing cookiecutter"
          python -m pip install --upgrade pip
          pip install cookiecutter==2.1.1
          cookiecutter --version
      
      # Render and sync manifests to S3
      - run: |
          # AWS-EKS
          bash ./scripts/publish-app-catalogue/sync-manifests-to-s3.sh tfy-k8s-aws-eks-inframold aws-eks ${{ env.AWS_S3_BUCKET }}
      - run: |
          # GCP Standard
          bash ./scripts/publish-app-catalogue/sync-manifests-to-s3.sh tfy-k8s-gcp-gke-standard-inframold gcp-gke-standard ${{ env.AWS_S3_BUCKET }}
      - run: |
          # Azure-AKS
          bash ./scripts/publish-app-catalogue/sync-manifests-to-s3.sh tfy-k8s-azure-aks-inframold azure-aks ${{ env.AWS_S3_BUCKET }}
      - run: |
          # Generic
          bash ./scripts/publish-app-catalogue/sync-manifests-to-s3.sh tfy-k8s-generic-inframold generic ${{ env.AWS_S3_BUCKET }}
      - run: |
          # Civo-Talos
          bash ./scripts/publish-app-catalogue/sync-manifests-to-s3.sh tfy-k8s-civo-talos-inframold civo-talos ${{ env.AWS_S3_BUCKET }}
      - run: |
          # Invalidate cloudfront
          aws configure set preview.cloudfront true && aws cloudfront create-invalidation --distribution-id EYFSW3BXDVFP0 --paths '/*'
      - run: echo "üçè This job's status is ${{ job.status }}."
